!init OPT_LOOK="akopia"; OPT_STYLE="manual"
# $Id: icfoundation.sdf,v 1.3 2001-05-09 23:40:46 bill Exp $

!define DOC_NAME "Foundation Store"
!define DOC_TYPE ""
!define DOC_CODE "icfoundation"
!define DOC_VERSION substr('$Revision: 1.3 $', 11, -2)
!define DOC_STATUS "Draft"
!define DOC_PROJECT "Interchange"
!define DOC_URL "http://developer.akopia.com/doc/icfoundation.html"
!build_title

H1: The Foundation Store

The Foundation store demo is designed to be relatively easy to start with, yet it is still a full-featured demonstration of a number of Interchange capabilities. This means it will take some work to understand it.

The following is a list of some popular features:

LI1: Category Searches

.If a catalog contains a small number of products, hard coded pages are sufficient, though they can be more difficult to maintain compared to database definitions. Regardless of the number of products in a catalog, consider categorizing them so they can easily be found. Pick a field in the database, perhaps named C<category>, and classify the products for search using Interchange.

LI1: Images

.Place a thumbnail image (perhaps with a link to a blowup) for the items that have images. To do this, add an image field in the database. (See the 'image' field of the products database.)

LI1: Related Items

.On a product's individual display page, embed searches of similar products with the C<[query ...]> or C<[loop ...]> tags. Or, if customer data is developed, search a past order database and display products that would be of interest to that customer.

LI1: Reviews/Testimonials

.Key the placement on the existence of a file in a certain directory. This is reasonable to do when a user is viewing a single product.

H1: Tree design

Determine how users will enter and exit the catalog. Complex and intelligent conditional schemes are possible, especially if the Cookies capability is used. However, it is recommended that simplicity be used. Consumers will not buy if they can't navigate their way around the catalog.

It is important to remember that users will lose their session (and items in their shopping cart) if their browser does not accept cookies and they leave the site. Interchange addresses this problem by using of the C<area> and C<page> tags. If using frames, source all frame panes containing Interchange links from an initial page served by Interchange. If not, the user may have multiple session IDs depending on which frame generated the link.

Note that Interchange does work properly even if the browser doesn't store cookies. In this situation Interchange inserts a session ID into each URL; if the ID is preserved as the user navigates from page to page then the session will remain intact.


H1: The Catalog Directory

Interchange pages are NOT in normal HTML space. They are contained in the catalog directory. Each individual catalog must have its own base directory. The catalog directory has the following structure by default:

LI1: catalog.cfg

.File containing configuration directives for this catalog. (Subcatalogs have differing information in a file named for the subcatalog.)

What's in Foundation's catalog.cfg specifically that's of interest?

LI1: config

.Directory that will be read when directives are set with the C<filename> notation. For example, the file C<config/static.pages> will be read when the following directive is encountered in the C<catalog.cfg> file.

!block example; listitem=2
  StaticPage  <static.pages
!endblock

.This directory also contains template information used with the C<makecat> program.

LI1: error.log

.File which contains catalog-specific errors. It is also where any syntax errors in embedded Perl code will be shown.

LI1: etc

.Directory normally used for tracking files, order profiles, and other configuration and log information.

LI1: pages

.Directory that contains the pages of the catalog. This can be considered to be the "document root" of the catalog. Pages contained therein are called with the path information after the script name. For example:

!block example; listitem=2
C</cgi-bin/simple/products/gold> will call the page in the file
C<pages/products/gold.html>.
!endblock

LI1: products

.Directory containing database source files, including the special Interchange databases shipping.asc, pricing.asc (and other shipping database files).

LI1: session

.Directory which contains session files.

LI1: tmp

.The temporary or scratch directory for various uses like retired ID numbers, search paging files, sort tests, import temporary files, etc. This is the default set by ScratchDir. It can be redefined to be located on another partition.


H1: Page Templates

The Simple Demo uses the C<Variable> feature extensively to simplify hand page editing. Basically speaking, a C<Variable> is a define that permits the substitution of text for a simple C<__VARIABLE__> string in a page.

For example, in the simple demo, this is a complete page with the standard layout:

!block example
   __LOGOBAR__
   __MENUBAR__
   __LEFTSIDE__

       This is unique content.

   __RIGHTSIDE__
   __MENUBOTTOM__
   __COPYRIGHT__
!endblock

The following illustration shows how this looks on the page.

!block example
   +--------------------------------------------------------+
   |   __LOGOBAR__                                          |
   |--------------------------------------------------------+
   |   __MENUBAR__                                          |
   |--------------+-------------------------+---------------+
   |              |                         |               |
   | __LEFTSIDE__ |   This is your content  | __RIGHTSIDE__ |
   |              |                         |               |
   |              |                         |               |
   +--------------+-------------------------+---------------+
   |   __MENUBOTTOM__                                       |
   |--------------------------------------------------------+
   |   __COPYRIGHT__                                        |
   +--------------------------------------------------------+
!endblock

In HTML, the C<__RIGHTSIDE__> is simply defined to be empty, closing the table row in most cases. The following illustration is actually how the page looks.

!block example
   +--------------------------------------------------------+
   |   __LOGOBAR__                                          |
   |--------------------------------------------------------+
   |   __MENUBAR__                                          |
   |--------------+-----------------------------------------+
   |              |                                         |
   | __LEFTSIDE__ |   This is your content                  |
   |              |                                         |
   |              |                                         |
   +--------------+-----------------------------------------+
   |   __MENUBOTTOM__                                       |
   |--------------------------------------------------------+
   |   __COPYRIGHT__                                        |
   +--------------------------------------------------------+
!endblock

The variables are defined in C<catalog.cfg>, and come from files in the config directory. There are conditional templates with different color schemes.

Once familiar with this method, it can be quite convenient. But other methods may be chosen, such as using an HTML editor. Interchange can coexist with editors that use the <NOTOUCH> </NOTOUCH> or <NOEDIT> </NOEDIT> pairs to delimit information that should not be altered or interpreted by the editor. Bear in mind that this templating method and the database layout of the simple catalog is only a suggestion on how a catalog might be organized. Many users decide to create their own database structure for product display.

Yet, most users stick with the userdb and checkout strategies employed in this catalog. This is because these strategies have been developed and proven successful over a period of years. Still, they can be customized to operate like Amazon.com or another site.

H1:The Database Tables

Interchange catalogs are all about the database. You can alter any of the standard databases to suit your needs, add new databases, or remove unneeded ones. But the following dictionary lists each table used in the Foundation demo and each of its fields, and explains its purpose.

N:Explain:
* Implied sub-databases
* Relational DB map
* Data assumptions
* Default medium (DBM vs. files vs. SQL) for each table in demo


H2:2ndDayAir.csv

Shipping table


H2:450.csv

Shipping table


H2:Ground.csv

Shipping table


H2:NextDayAir.csv

Shipping table


H2:access.asc


Administrative access table.  This table is used by the administrative interface.


B<Fields>

!block table; colvaligns="TT"
Field|Description
{{CMD[jump="#access_username"]username}}|<<
Login name or group name (group names begin with ':')
>>
{{CMD[jump="#access_password"]password}}|<<
Hashed password
>>
{{CMD[jump="#access_name"]name}}|<<
Administrator's name
>>
{{CMD[jump="#access_last_login"]last_login}}|<<
Last login time
>>
{{CMD[jump="#access_super"]super}}|<<
Set to 1 if superuser
>>
{{CMD[jump="#access_yes_tables"]yes_tables}}|<<
Tables the user may edit
>>
{{CMD[jump="#access_no_tables"]no_tables}}|<<
Tables the user may not edit
>>
{{CMD[jump="#access_upload"]upload}}|<<

>>
{{CMD[jump="#access_acl"]acl}}|<<

>>
{{CMD[jump="#access_export"]export}}|<<

>>
{{CMD[jump="#access_edit"]edit}}|<<

>>
{{CMD[jump="#access_pages"]pages}}|<<

>>
{{CMD[jump="#access_files"]files}}|<<

>>
{{CMD[jump="#access_config"]config}}|<<

>>
{{CMD[jump="#access_reconfig"]reconfig}}|<<

>>
{{CMD[jump="#access_groups"]groups}}|<<

>>
{{CMD[jump="#access_meta"]meta}}|<<

>>
{{CMD[jump="#access_no_functions"]no_functions}}|<<

>>
{{CMD[jump="#access_yes_functions"]yes_functions}}|<<

>>
{{CMD[jump="#access_table_control"]table_control}}|<<

>>
{{CMD[jump="#access_personal_css"]personal_css}}|<<

>>
!endblock

H3: {{CMD[id="access_username"]username}}

Example Data

!block example
   :ausers
   :busers
   BigUser
   goody
   ic
!endblock

Either a login name for an administrator or a group name. Group names are prefixed with a colon (':').


H3: {{CMD[id="access_password"]password}}

Example Data

!block example
   Ksjs65bMNLjPQ
!endblock

Hashed password.


H3: {{CMD[id="access_name"]name}}

Example Data

!block example
   Administrative Users
   Business Users
   Goody Twoshoes
   Mr. Bigger
   Super User
!endblock

Descriptive name for the administrator or group.


H3: {{CMD[id="access_last_login"]last_login}}

Example Data

!block example
   989424489
!endblock

Last login time (in unix time() format).


H3: {{CMD[id="access_super"]super}}

Boolean value.  If true (1), the administrator has superuser privilege.


H3: {{CMD[id="access_yes_tables"]yes_tables}}

Example Data

!block example
   affiliate=vcx component=v gift_certs=v inventory=vx ...
   NONE
!endblock

Tables this administrator or group may access.  This will be a space-delimited list of 'table_name=permission_flags' entries.


H3: {{CMD[id="access_no_tables"]no_tables}}

Example Data

!block example
   access mv_metadata variable
!endblock

Tables this administrator may not use.  This will be a space-delimited list of tables names.


H3: {{CMD[id="access_upload"]upload}}

No Description


H3: {{CMD[id="access_acl"]acl}}

No Description


H3: {{CMD[id="access_export"]export}}

No Description


H3: {{CMD[id="access_edit"]edit}}

No Description


H3: {{CMD[id="access_pages"]pages}}

No Description


H3: {{CMD[id="access_files"]files}}

No Description


H3: {{CMD[id="access_config"]config}}


No Description

Example Data

!block example
!endblock

Allowed Values

###config.access.DESC###


H3: {{CMD[id="access_reconfig"]reconfig}}

No Description


H3: {{CMD[id="access_groups"]groups}}

Example Data

!block example
   ausers
   busers
!endblock

Allowed Values

Groups the administrator belongs to. You can set permissions for groups.


H3: {{CMD[id="access_meta"]meta}}

No Description


H3: {{CMD[id="access_no_functions"]no_functions}}

!block example
   orderstats trafficstats
!endblock

Space-delimited list of functions explicitly disallowed for the administrator.


H3: {{CMD[id="access_yes_functions"]yes_functions}}

Example Data

!block example
   item=lvecd itemtype=lvc order=lvca orderstats trafficstats ...
   NONE
!endblock

Functions the administrator may perform. This will be a space-delimited list of functions, with permission flags if appropriate.

Usage examples
* dist/lib/UI/pages/admin/access_permissions.html


H3: {{CMD[id="access_table_control"]table_control}}

No Description

Usage examples
* dist/lib/UI/Primitive.pm
* dist/lib/UI/pages/admin/special/key_violation.html
* dist/lib/UI/usertag/if_mm


H3: {{CMD[id="access_personal_css"]personal_css}}

Used in the admin screens to make personal changes to the admin presentation, by creating your own personal CSS.

Usage examples
* dist/lib/UI/pages/admin/preferences.html


H2: affiliate.txt

This table contains data related to your affiliate programs.  See also the {{CMD[jump="#component_affiliate_receptor"]affiliate_receptor}} component.


B<Fields>

!block table; colvaligns="TT"
Field|Description
{{CMD[jump="#affiliate_affiliate"]affiliate}}|<<
Affiliate ID
>>
{{CMD[jump="#affiliate_name"]name}}|<<
Name of affiliate organization
>>
{{CMD[jump="#affiliate_campaigns"]campaigns}}|<<
Campaigns this affiliate participates in
>>
{{CMD[jump="#affiliate_coupon_amount"]coupon_amount}}|<<
Discount for customers from affiliate participating in coupon campaign
>>
{{CMD[jump="#affiliate_join_date"]join_date}}|<<
When the affiliate signed with you
>>
{{CMD[jump="#affiliate_url"]url}}|<<
Your default URL to use for customers coming from the affiliate site (not the affiliate's home page)
>>
{{CMD[jump="#affiliate_timeout"]timeout}}|<<
Timeout in seconds after which purchases are no longer credited to the affiliate
>>
{{CMD[jump="#affiliate_active"]active}}|<<
Boolean, set to 1 for active affiliates
>>
{{CMD[jump="#affiliate_password"]password}}|<<
Affiliate login password
>>
{{CMD[jump="#affiliate_image"]image}}|<<
Affiliate's logo
>>
!endblock

H3: {{CMD[id="affiliate_affiliate"]affiliate}}

Example Data

!block example
   consolidated
   hardhat
!endblock

This field contains the unique Affiliate ID.


H3: {{CMD[id="affiliate_name"]name}}

Example Data

!block example
   Consolidated Diversified
   Hardhat Construction
!endblock

This is the descriptive name of the affiliate.


H3: {{CMD[id="affiliate_campaigns"]campaigns}}

Example Data

!block example
   coupon
!endblock

This field lists the campaigns in which the affiliate participates and is used to enable campaign features and track traffic from advertising campaigns. The foundation catalog implements a coupon campaign in the affiliate_receptor component.  If you wish to add campaigns, you will also need to develop the appropriate logic within the affiliate_receptor component and pages that use it.


H3: {{CMD[id="affiliate_coupon_amount"]coupon_amount}}

Example Data

!block example
   5
!endblock

This is the discount offered customers from the affiliate participating in the coupon campaign.

Note --  This is implemented in the affiliate_receptor component as a flat discount amount. If you wanted a percentage discount instead, you would modify the E<lbracket>{{C[jump="ictags.html#discount"]discount}}] tag in catalog_root/templates/components/affiliate_receptor (see the E<lbracket>{{C[jump="ictags.html#discount"]discount}}] tag for more detail).


H3: {{CMD[id="affiliate_join_date"]join_date}}

Example Data

!block example
   20000827
   20000910
!endblock

This is the date when the affiliate signed with you.


H3: {{CMD[id="affiliate_url"]url}}

Example Data

!block example
   http://demo.akopia.com/~hardhat
   http://www.minivend.com/consolidated/
!endblock

The value in this field is used to direct visitors coming from the Affiliate to your home page or a page you have designed specifically for visitors from that Affiliate's site. Note that this should I<not> be the URL of the Affiliate's home site.


H3: {{CMD[id="affiliate_timeout"]timeout}}

Example Data

!block example
   0
   3600
!endblock

The value in this field is used to specify the amount of time a customer has to place an order and still give the Affiliate credit for it. If the customer goes over this amount of time, the Affiliate doesn't get credit for the customer visit. The timeout delay is measured in seconds, with the value of 0 (zero) disabling it. It is recommended that you use a value in the thousands to be sure the customer has enough time to shop.


H3: {{CMD[id="affiliate_active"]active}}

This is a boolean value indicating whether the affiliate is active.


H3: {{CMD[id="affiliate_password"]password}}

Example Data

!block example
   akopia
!endblock

Password for affiliate login (see catalog_root//pages/affiliate/login.html). Note that the password is stored in plaintext by default.


H3: {{CMD[id="affiliate_image"]image}}

Example Data

!block example
   http://demo.akopia.com/~hardhat/images/logo.gif
   http://www.minivend.com/consolidated/conslogo.gif
!endblock

Affiliate's logo image.


H2: area

This table is used to implement dynamic navigation bars, for example in the category_horizontal and category_vertical components. It is also used for the administrative interface.

When building a navigation bar, it is the  B<bar_link> subroutine in the /dist/catalog_before.cfg configuration file that actually reads and processes the values from the table.

See also the following catalog and administrative templates:
* cat_root/templates/components/category_horizontal
* cat_root/templates/components/category_vertical
* dist/lib/UI/pages/admin/layout.html
* dist/lib/UI/pages/admin/layout_auto.html
* dist/lib/UI/pages/admin/wizard/do_launch.html
* dist/lib/UI/pages/admin/wizard/do_save.html


B<Fields>

!block table; colvaligns="TT"
Field|Description
{{CMD[jump="#area_code"]code}}|<<
Unique key
>>
{{CMD[jump="#area_sel"]sel}}|<<
Page area for the navigation bar entry
>>
{{CMD[jump="#area_name"]name}}|<<
A display label to replace C<code> or C<selector>
>>
{{CMD[jump="#area_which_page"]which_page}}|<<
Page class in which the navigation bar may appear
>>
{{CMD[jump="#area_sort"]sort}}|<<
Sorting prefix for entry (preempts standard alphanumeric sort)
>>
{{CMD[jump="#area_display_type"]display_type}}|<<
How to label the navbar (for example, name, icon, url or image)
>>
{{CMD[jump="#area_image"]image}}|<<
Image (if appropriate)
>>
{{CMD[jump="#area_image_prop"]image_prop}}|<<
HTML attributes for output <img> tag (if appropriate)
>>
{{CMD[jump="#area_banner_image"]banner_image}}|<<
See below
>>
{{CMD[jump="#area_banner_text"]banner_text}}|<<
See below
>>
{{CMD[jump="#area_link_type"]link_type}}|<<
See below
>>
{{CMD[jump="#area_url"]url}}|<<
Target for internal or external link_type
>>
{{CMD[jump="#area_tab"]tab}}|<<
Database table file to use with 'simple' B<link_type>
>>
{{CMD[jump="#area_page"]page}}|<<
Results page to use with 'simple' B<link_type>
>>
{{CMD[jump="#area_search"]search}}|<<
Search spec used with 'complex' B<link_type>
>>
{{CMD[jump="#area_selector"]selector}}|<<
See below
>>
{{CMD[jump="#area_link_template"]link_template}}|<<
Overrides template used for building navbar links.
>>
!endblock

H3: {{CMD[id="area_code"]code}}

Example Data

!block example
   1
   2
   3
!endblock

Unique key


H3: {{CMD[id="area_sel"]sel}}

Example Data

!block example
   left
!endblock

Page area for the navigation bar entry.


H3: {{CMD[id="area_name"]name}}

Example Data

!block example
   Hand Tools
   Hardware
   Ladders
   Measuring Tools
   Painting Supplies
   Safety Equipment
   Specials
   Tool Storage
!endblock

A display label to replace C<code> or C<selector>.


H3: {{CMD[id="area_which_page"]which_page}}

Example Data

!block example
   all
!endblock

Page class in which the navigation bar may appear.


H3: {{CMD[id="area_sort"]sort}}

Example Data

!block example
   00
   03
   04
   05
   06
!endblock

Lexographic (alphanumeric) sorting prefix.  Note use of '03' rather than '3', which would sort after '13'. This controls the order of the categories in your navigation bar.

If not set, your navbar entries will sort in alphabetical order.


H3: {{CMD[id="area_display_type"]display_type}}

Example Data

!block example
   name
   icon
   url
   image
!endblock

What to use for the labels in the navigation bar (for example, name, icon, url or image). The navigation bars in the foundation catalog are set up with 'name' display_type.


H3: {{CMD[id="area_image"]image}}

Image to display for image or icon B<display_type>.


H3: {{CMD[id="area_image_prop"]image_prop}}

For image or icon B<display_type>, this contains the HTML attributes for the HTML that will appear in the navbar, for N<example:>
E:  E<lt>img src="B<image>" alt="B<name>" B<image_prop>E<gt>B<name>


H3: {{CMD[id="area_banner_image"]banner_image}}

Sets 'va=banner_image=B<banner_image>' in 'simple' and 'complex' B<link_type>. The foundation catalog navigation bars are not set up with link types that use the B<banner_image> field.


H3: {{CMD[id="area_banner_text"]banner_text}}

Sets 'va=banner_text=B<banner_text>' in 'simple' and 'complex' B<link_type>. The foundation catalog navigation bars are not set up with link types that use the B<banner_text> field.


H3: {{CMD[id="area_link_type"]link_type}}

Example Data

!block example
   none
   external
   internal
   simple
   complex
!endblock

Link type to create in the navigation bar. The navigation bars in foundation catalog are set up to use 'none' as the link_type.

Link types
* external
** External link. The HTML specified in B<url> will go directly into the navigation bar.

* internal
** Internal link. This will be highlit if it is the current page. If you specify both a page and a form for the link, the B<url> field should contain "I<page> I<form>".  See the Search Engine documentation for more detail on search forms.

* simple or complex
** See the B<bar_link> subroutine in the /dist/catalog_before.cfg configuration file for more detail if you need to use these (for example, to implement banners in the bar).


H3: {{CMD[id="area_url"]url}}

Target URL (external link or internal page/search specification). See B<link_types> above. The foundation catalog navigation bars are not set up with link types that use the B<url> field.


H3: {{CMD[id="area_tab"]tab}}

Database table file to use with 'simple' B<link_type> (searchspec fi=B<tab>). The foundation catalog navigation bars are not set up with link types that use the B<tab> field.

H3: {{CMD[id="area_page"]page}}

Results page to use with 'simple' B<link_type> (searchspec sp=B<page>). The foundation catalog navigation bars are not set up with link types that use the B<page> field.


H3: {{CMD[id="area_search"]search}}

Search spec used with 'complex' B<link_type>. See the Search Engine documentation for more detail on search forms. The foundation catalog navigation bars are not set up with link types that use the B<search> field.


H3: {{CMD[id="area_selector"]selector}}

The selector that is used to scan the C<products> table for products in the category. Used with 'simple' B<link_type>. The foundation catalog navigation bars are not set up with link types that use the B<selector> field.


H3: {{CMD[id="area_link_template"]link_template}}

Overrides the usual HTML link template for navbar entries. The foundation catalog navigation bars are not set up with link types that use the B<link_template> field.


H2:cat.txt

Categories.

!block example
    code
    sel
    name
    which_page
    sort
    display_type
            name = Name
            url = URL only
            icon = Icon and name
            image = Image
    image
    image_prop
    banner_image
    banner_text
    link_type
        Type of link:
            none = No link
            external = External link (http://...)
            internal = Interchange page
            simple = Simple search
            complex = Complex search
    url
    tab
    page
    search
    selector
    link_template
!endblock

H2:component.txt

!block example
    code
    group
    name
    width
    height
    pieces
    label
    banner
    help
    help_url
    filter
    controls
    Variable
!endblock


H2: country

.A list of countries used to build select boxes and select shipping modes based on countries.

!block example
    code
    sorder
    region
    selector
    shipmodes
    name
!endblock


H2:downloadable.txt

!block example
    sku
    dl_location
    dl_type
!endblock


H2:files.txt

A database where files (pages, etc.) can be kept instead of in the Unix filesystem.


H2:gift_certs.txt

!block example
    code
    username
    order_date
    original_amount
    redeemed_amount
    available_amount
    passcode
    active
    redeemed
    update_date
!endblock


H2:inventory.txt

!block example
    sku
        Quantity info
    quantity
		Gets decremented after each sale.
    stock_message
		The usual shipping time of the product.
        Out of stock message:
            In stock
            Ships in 3-5 days
            Ships in 4-6 weeks
            Special order
    account
        Accounting info
        Sales account
    cogs_account
!endblock


H2:locale.txt

!block example
    code
    en_US
    de_DE
    fr_FR
!endblock


H2:merchandising.txt

!block example
    sku
    featured
    banner_text
    banner_image
    blurb_begin
    blurb_end
        Closer (end text for feature display)
    timed_promotion
    start_date
        Start date
    finish_date
    upsell_to
        Cross-sell SKUs
    cross_sell
    cross_category
    others_bought
    times_ordered
!endblock


H2:options.txt

!block example
    code
    o_master
        Master item (Always included when the base SKU is equal to this.)
    sku
        Unique SKU (Associated item)
    o_group
        Option Group (scanned to see if it applies (or doesn't apply) to this
        product)
    o_sort
    phantom
        Phantom? (Whether a phantom for structuring)
    o_enable
        Follow? (Enable for next level) Sub-items
    o_matrix
        Matrix options (Matrix options allow you to maintain multiple option
        sets with inventory on each combination)
    o_modular
        Modular Options (Modular options allow you to attach multiple SKUs to
        the same item, possibly with attached options of their own.  Very
        complex but you can do most anything.
    o_default
        Default? (Yes if the default selection for the group)
    o_label
        Short name for option display
    o_value
        Possible Values (In Interchange option format: VALUE1=Label 1,
        VALUE2=Label 2 *=default selection)
    o_widget
    o_footer
    o_header
    o_height
        Height of widget (if applicable)
    o_width
        Width of widget
    description
        Option/Variant description (for description in display)
    price
        Price (Price of this option/variant)
    wholesale
        Dealer price
    differential
    weight
    volume
        Volume (if different, mostly for matrix/modular)
    mv_shipmode
    o_exclude
        Exclude (Only for modular options. Lists the option groups to exclude
        once the include has been done.  Takes the form of a number of wildcard
        atoms.
    o_include
        Include (Only for modular options. Lists the option groups to include
        with your item. Takes the form of a number of wildcard atoms.)
!endblock


H2:order_returns.txt

!block example
    code
    order_number
    session
    username
    rma_number
    nitems
    total
    return_date
    update_date
!endblock


H2:orderline.txt

Every line item that is actually ordered is detailed in this table. The order as a whole is one record in the transactions table.

See the page C<query/check_orders.html> for how it might be used. See C<etc/report> for how to add to it.

!block example
    code
    store_id
    order_number
    session
    username
    shipmode
    sku
    quantity
    price
    subtotal
    shipping
    taxable
    mv_mi
    mv_si
    size
    color
    options
    order_date
    update_date
    status
            pending = Pending
            shipped = Shipped
            backorder = Back ordered
            credit = Waiting for credit check
            canceled = Cancelled
    parent
    affiliate
    campaign
    description
    mv_mp
!endblock


H2:pricing.txt

A database that works in conjunction with the C<CommonAdjust> directive to allow quantity pricing, either for one product or for a group of products (sometimes known as mix-and-match). The fields C<q2, q5, q10, etc.> are for the quantity levels; the C<price_group> field selects the mix-and-match category for the product.

!block example
    sku
    price_group
    q2
    q5
    q10
    q25
    q100
!endblock


H2:products.txt

The main product table. This is where product information is stored. Add new fields or ignore existing ones as needed. Field by field:

!block example
    sku
		The unique identifier for the product. Though theoretically it can contain most any character, use only characters of the class C<A-Z a-z 0-9 _ -> in order to be compatible with SQL databases, file systems, and URL encoding. Other characters can cause problems. A slash (C</>) can interfere with URLs and filenames. A colon (C<:>) can interfere with database representations (or file names on some operating systems). There are other possible compatibility situations with other characters.
    description
		A short description for the product that is used for displaying in the shopping cart, receipt, and order report. Keep it short.
    title
		This is usually catalog-specific since it applies to art. However, it would also apply to books, CDs, or other items.
    template_page
    comment
		A long description of the product. If using the Interchange internal database, the field size is unlimited; if using another type of database, the length will be dependent on the field type selected.
    thumb
        Thumb
    image
		The image filename for the product. Many users add a C<thumb> field to contain the name of a small image for search list display. Another popular technique is to store images in files that are named for the product code (SKU), instead of using this field. You can then check if an image exists for a given SKU with this construct:
			[if type=file compare="[item-code]".jpg"]<img src="[item-code].jpg">[/if]
    price
		The quantity-one price of the product.
    wholesale
        Dealer Price
    prod_group
    category
		The category used for selection in lists. It is possible to place a product in more than one category, although this will require decisions about display and banner headings. Embedded Perl or other methods can be used.
    nontaxable
		If set to C<1>, the product is not taxable and its price will not be used in a sales tax calculation.
    weight
		A numeric value of the weight used for determining shipping costs (with UPS, for example). Normally in pounds, it can be anything the shipping routines will handle.
    size
		A comma-separated list of options as used in C<Accessories>. See the C<flypage.html> and C<ord/basket.html> pages for examples of how it is used. An example:
			Small, Medium, Large, XL
		Other attribute information may be defined in a separate field.
    color
		A comma-separated list of options as used in C<Accessories>. See the C<flypage.html> and C<ord/basket.html> pages for examples of how it is used.
    gift_cert
        Gift certificate handling? (Yes if price should appear to be quantity)
    related
		Used for displaying "upsells," opportunities to purchase an additional item when this one is purchased. Contains a comma-separated list of SKUs to be offered.
    featured
		As used in the demo, the only meaningful value is C<front>. If this is contained in the field, this product may be featured on the front page via random selection. See the C<index.html> page for how it integrates with C<[loop search=something random=3]>.
    download
    dl_type
    dl_location
    inactive
    url
!endblock


H2:route.txt

!block example
    code
    attach
    continue
    commit
    commit_tables
    counter
    credit_card
    cyber_mode
    email
    empty
    encrypt
    encrypt_program
    errors_to
    increment
    inline_profile
    individual_track
    individual_track_ext
    partial
    pgp_cc_key
    pgp_key
    profile
    receipt
    reply
    report
    rollback
    rollback_tables
    supplant
    track
!endblock


H2:salestax.asc


H2:shipping.asc

Shipping methods table


H2:state.txt

State/territory/county information

!block example
    code
    sorder
    country
    state
    name
    tax
    postcode
    shipmodes
    tax_name
!endblock


H2:transactions.txt

Each individual customer order has an entry in this table. Each line item is entered not here, but in the orderline table.

See the page C<query/check_orders.html> for how it might be used. See C<etc/report> for how to add to it.

!block example
    code
    store_id
    order_number
    session
    username
    shipmode
    nitems
    subtotal
    shipping
    handling
    salestax
    total_cost
    fname
    lname
        Last Name
    company
    address1
    address2
        Address line 2
    city
    state
    zip
    country
    phone_day
        Daytime Phone
    phone_night
        Home Phone
    fax
    email
    b_fname
    b_lname
        Billing Last Name
    b_company
    b_address1
    b_address2
        Billing Address Line 2
    b_city
    b_state
        Billing State
    b_zip
        Billing Postcode
    b_country
        Billing Country
    b_phone
    order_date
    order_ymd
    order_wday
    payment_method
    po_number
    avs
    order_id
    update_date
    status
    affiliate
    campaign
    parent
    archived
    deleted
    complete
    comments
!endblock


H2:userdb.txt

The user database used for maintaining customer address information, account information, preferences, and more. See icdatabase for more information.

!block example
    username
    password
    acl
    mod_time
    s_nickname
    company
    fname
    lname
    address1
    address2
    address3
    city
    state
    zip
        Postcode
    country
        Country
    phone_day
    mv_shipmode
    b_nickname
    b_fname
    b_lname
    b_address1
    b_address2
    b_address3
    b_city
    b_state
    b_zip
    b_country
    b_phone
        Billing Phone
    mv_credit_card_type
    mv_credit_card_exp_month
    mv_credit_card_exp_year
    p_nickname
    email
    fax
    phone_night
    fax_order
        Payment method:
            (none) = Credit Card
            1 = Fax or Mail
            2 = Purchase order
            3 = COD
    address_book
    accounts
    preferences
    carts
    owner
    file_acl
    db_acl
    order_numbers
    email_copy
    mail_list
        Mailing lists the customer has joined:
            offer = Special offers
            newsletter = Newsletter
            alert = Alerts and Recalls
            upgrade = Upgrades
    project_id
    account_id
    order_dest
    credit_limit
    inactive
    dealer
        Dealer:
            (none) = No
            1 = Yes
    b_company
    feedback 
        ???
!endblock


H2:variable.txt

Configuration database

!block example
    code
        Variable name
    Variable
    pref_group
        Preferences area
!endblock


H1: HTML Hypertext links

Normally, regular hypertext links are not used in Interchange pages. These kinds of links will not include the session ID. If the customer follows an external link back to the catalog, the list of products ordered so far will have been lost. The C<area> tag is used to generate a hypertext link which includes a session ID.

Instead of:

!block example
   <A HREF="/cgi-bin/mv/shirts">Shirts</A>
!endblock

\Use:

!block example
   <A HREF="[area shirts]">Shirts</A>
!endblock


H1: Images

Inline images are placed in Interchange pages in the normal fashion with <IMG SRC="URL">. But since Interchange pages are served by a CGI program, do not use relative links. The Foundation store defines an image directory with the C<ImageDir> and C<ImageDirSecure> directives WHERE HOW WHAT that automatically adjusts the image path to a set base directory.


H1: Browser Cookies

The Foundation store enables the C<Cookies> directive so that users with cookie-capable browsers will retain session context. Then, standard HREF and Interchange page links can be intermixed without fear of losing the shopping basket. Cookie capability is also required to use search caching, page caching, and statically generated pages. If the user's browser does not support cookies, the cache will be ignored.

If planning to use more than one host name within the same domain for naming purposes (perhaps a secure server and non-secure server), set the domain with the C<CookieDomain> directive. This must contain at least two periods (.) as per the cookie specification, and must be located in the same server as the domain.


H1: Standard Variables

mv_this
mv_that


H1: Default order routes

Emailed orders.
Using PGP/GnuPG.
Any default integration with payment processors?


H1: Dissect the flypage ?


H1: Dependencies in admin

In general, it's a good idea to leave fields empty if you don't want to use them, instead of removing them from the database altogether. That way nothing in admin or demo will break.
