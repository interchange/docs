=head1 NAME

mvfaq - Interchange FAQ

=head2 VERSION

Document version: $Id: mvfaq.pod,v 1.1 2001-04-10 21:05:14 jon Exp $

This document describes Interchange 4.5 and later.

=head1 DESCRIPTION

Interchange is a freely-redistributable database retrieval and display
application focused on e-commerce. In other words, a high-end and powerful
shopping cart.  It serves any number of catalogs via the World Wide Web,
allowing users to select items for placement on their shopping list,
or cart, and then buy them by filling out an order form.

Interchange supports Secure Sockets Layer (SSL), PGP/GPG strong encryption,
and online payment services to improve security. It is designed never
to write an unencrypted credit card number to disk.

Interchange has a host of features -- a partial list is available at
its web home page:

	http://interchange.akopia.com/

A more complete list is in its documentation, available via links from above.

A full list can only be seen by examining its source code. 8-)

Interchange is developed and supported by Akopia, Inc.,
and was originally written by by Mike Heins and distributed as
Minivend. It was based on Andrew Wilcox's 1995 Vend.

Later, Akopia acquired Minivend and its easy-to-use Tallyman user interface
was attached, with many of its features added.

Interchange is freely redistributable under the GNU General Public License,
a copy of which should come with every Interchange package. Basically
this means that you can use it for commercial or non-commercial
purposes for free, but you you have certain responsibilities if you
modify and/or redistribute it. See the GNU GPL for more information.

=head2 Where can I get Interchange?  How much does it cost?

You simply download it from:

    http://interchange.akopia.com/download.html

You also need Perl 5.005 or higher, available from CPAN.
A list of CPAN locations is always available at

    http://www.perl.com/CPAN/

As to cost, Interchange is I<free> within the confines of the GNU General
Public License.  Basically, any individual or company can use Interchange
free of charge -- you have certain responsibilities if you modify
your copy then redistribute it. See the GPL at:

    http://www.gnu.org/copyleft/gpl.txt

=head2 What else do I need to run Interchange?

Interchange is a complex system requiring the services of other complex
pieces of hardware and software. While it can be very easy to install,
it is not always. You must look at the ongoing environment as well as
just the initial installation.

=over 4

=item Perl

First of all, you need a recent Perl. Interchange 4 will
not run on anything less than Perl 5.005.

=item Perl modules

The core functions of Interchange I<will> run with a stock Perl, but to use some features
of Interchange (like the administrative interface) you will need some extra
modules. If you are on UNIX you can use the CPAN module and run:

    perl -MCPAN -e 'install Bundle::Interchange'

and it should install all of the modules necessary except the DBM/DBI
ones.

These modules are strongly recommended:

    Digest::MD5
    MIME::Base64
    SQL::Statement
    URI::URL
    Safe::Hole
    Bundle::LWP (contains MIME::Base64 and URI::URL)
    GDBM or DB_File (comes with most i386 Perls)

These are definitely recommended:

    Storable
    Business::UPS (comes with Interchange)

These are nice to have but are not essential:

    Term::ReadLine::Perl
    Term::ReadKey

You will need the B<DBI> module if using SQL, along with the
appropriate DBD module for your database.

=item Operating System

UNIX is best. Interchange doesn't yet run on Windows, but will
run on Mac OS/X.

It is unknown when Interchange on Windows will
be suitable for high-volume catalog serving. This is
mostly due to NT not fitting the UNIX fork() model which works
so well with Interchange.

Mac OS/Finder is not supported. If the time comes when it starts to reasonably
support normal POSIX services, then an attempt to port will be made. This
is not likely, in our estimation. Interchange does run fine on OS/X.

=item Machine

The server should be fast and have lots of memory. A 500MHz Pentium
or equivalent with 128MB of RAM works well and can serve many
catalogs if that is all it does.

If you are located on a machine with many hundreds of domains, as sometimes
happens with low-cost hosting operations, you can expect some problems. It
is difficult to maintain a stable environment with that many users.

=back

Interchange will run about as well as the platform beneath it. It routinely
runs for months non-stop in a stable environment.

=head2 If you are having problems

Interchange is not guaranteed to be supported in any fashion other than
to make full source code of the current version available. However,
Akopia is interested in making Interchange as reliable and trouble-free
as possible and provides both free and paid support for Interchange.
Forward bug reports, questions and comments to the mail list,
interchange-users@lists.akopia.com, or Akopia support, <support@akopia.com>.

Do understand that any problems answered in this FAQ or the documentation
will likely be ignored by people on the mail list. Other problems will
also be ignored if you don't:

=over 4

=item *

mention that you have referenced appropriate items in the documentation
and FAQ.

=item *

include the various version information that is appropriate.

=item *

mention what is (or is not) in the error.log files

=back

The official Interchange web site is:

    http://interchange.akopia.com/

The latest version of the software, this FAQ, and the documentation,
are available there.  Your problem may not be unique -- check the site
first. There is a search feature that encompasses the documentation
and FAQ; there is also a mail list and an archive for it.

The most common problem on UNIX is receiving the "We're sorry, the Interchange
server is unavailable..." message.  This almost always means that permissions
are not properly set up, or that the link program is not in the right location.

If your provider uses CGI-WRAP or SUEXEC, it will probably error out if you
selected UNIX mode and didn't reply "Yes" to the question I<Do you use CGIWRAP?>.
To unset the setuid bit for another try, telnet in and do

    chmod u-s cgi-bin/simple

where C<cgi-bin> is the directory that the program is located.

To reenable it:

    chmod u+s cgi-bin/simple

If that doesn't work, it usually means you are on a virtual host with limited
command set.

To verify that this is the problem, try temporarily changing the
permission of the interchange/etc/socket file (or /var/run/minivend/socket,
or /var/run/interchange/socket, etc.) to be read/write by
setting in C<minivend.cfg>:

    SocketPerms 0666

If Interchange then works you will have to make sure the user that the VLINK
program runs as matches the user who is running the Interchange daemon.
It is usual to create a special C<mvend> or C<minivend> user to run the
daemon and the link program.  This means the directory listing for your
CGI-BIN should be something like:

   -rwsr-xr-x   1 minivend users        6312 Dec 30 11:39 cgi-bin/simple

and for the socket file it should be:

   srw-------   1 minivend users           0 Dec 30 11:41 etc/socket

See the next section for troubles with running Interchange on ISP sites.

Beyond that, if you are unable to get Interchange installed you should
check to see if you can run I<any> CGI program from the path it
is trying to use. The next most common problem is the user giving
the wrong information to C<makecat>.

Interchange works on Perl Version 5.005 and higher.  Interchange will
definitely be tested with the last major release of Perl at the time
of package release.  As of this writing, Interchange's version is 4.5.4
and Perl's latest release version is 5.6.0.

=head2 Information Needed for Support

First, check the the official Interchange web site for information:

    http://interchange.akopia.com/

If you are unable to get Interchange installed, it is almost always
a problem with your answers to its questions or with the the Perl
installation. Common problems include:

=over 4

=item *

Your Perl has threading enabled. This may cause problems for Interchange
on some operating systems. Try building a Perl without threading.

=item *

Occupied default port (8786) or interfering firewall during the test. This
causes part of 'make test' to fail while Interchange might still work
just fine.

=item *

Very old machine or a machine with very low memory (less than 128M).
The test programs might time out while Interchange might still work. It
won't work very well; expect very slow performance if you don't have
sufficient memory.

=item *

Bad installation of Perl. While not as common as it used to be, since
Perl 5 is distributed with so many systems, it does happen.
A proper Perl will need to be installed.

If Interchange does a core dump or causes a segmentation fault, this is
most certainly the problem.

=item *

Inadequate system privileges or quota restrictions.  If you have a
virtual memory quota then Interchange can easily exceed it.

=item *

HPUX may not be able to compile vlink.c and tlink.c.  Use tlink.pl as
your link program. In addition, Solaris often comes with either no
tools or your path may not point to /usr/ccs/bin where some of the
tools are.

=back

There are many more possible problems. See the README file for other
OS-specific problems.

Second, double check that you have done the following things:

=over 4

=item *

Checked I<B<all>> of the error.log files?  There is one for
each catalog, and a global one in the Interchange software root directory.

=item *

Try INET mode if UNIX mode fails, and vice-versa.

=item *

If you run CGI-WRAP or SUEXEC, have you turned off the SUID bit for vlink with a
C<chmod 755 cgi-bin/simple> or the like?  (The C<makecat> program does this 
if you answer its question correctly.)

=item *

Have you tried copying the INET mode link program C<tlink> over the
C</cgi-bin/simple> or C<simple.cgi> program?

=item *

That you have proper permissions on all files that need to
be written. This includes the product database ASCII source files,
needed because of locking.

=item *

If the function in question is from an external program (such
as PGP) you have tried the command B<as shown in the directive>
from the command line, and as the B<same user ID as the minivend daemon>.

=item *

The vlink CGI program is being executed on a machine that has the
socket file I<etc/socket> on a directly attached disk. UNIX-domain
sockets will not work on NFS-mounted filesystems!  That means the
server I<minivend.pl> and the CGI program I<vlink> must be executing
on the same machine. In most cases, you can use INET mode and
the tlink program instead if you must cross NFS boundaries.

=back

If you have a problem you are not able to correct, and you have taken all
of those steps, you can send email to the Interchange users list:

    minivend-users@minivend.com

Please include your B<operating system name> and B<version>, your
B<Perl version>, the B<DBM library in use>, and the contents of ALL
error logs.

Please see this if you don't get an answer:

    http://interchange.akopia.com/minivend/the_authors_life.txt

Interchange is an ambitious and complex program, and is not presented as
being I<easy to use>, I<easy to install>, or I<bug-free>.  The
configuration script was done to try and make a very painful process only
slightly painful.  Some people install in one pass.  Others never make it.
Determined and thoughtful users almost always make Interchange work.

=head2 If you are intending to run Interchange on an ISP

The great majority of ISPs provide some CGI service, and more and more
run systems that are compatible with Interchange.  The catalog
configurator for Interchange is designed to figure out many ISP directory
setups.

Almost any Internet Service Provider (ISP) system
I<should> be able to run Interchange, but some cannot (or will not) run
Interchange at all.  On top of that, many times ISP personnel are too busy
to help, won't help, or don't know enough to help.  Some are secretive
about details of the setup of their systems.

Interchange does require a stable platform underneath it. Many ISP servers
are heavily loaded (especially low-cost ones). If you run on a server
which is constantly running out of memory and file descriptors, you will
not be happy with your results with Interchange.

Virtual servers that don't provide shell access are not really usable
for Interchange without direct support from the ISP -- unless you are
a CGI/Perl wizard who can figure out how to do it. 8-) It can be done
(with a good deal of difficulty) on some virtual servers.

Iserver.com and others who use an chroot HTTP daemon for each user
will require some source-code twiddling to get the paths for vlink
right -- the catalog configurator will not do the trick. See the mail
list archives for the hack.

Interchange does require a lot of memory, and it does run as a daemon. You
will find that that vexes a fair number of ISPs. I have found it difficult
to provide power and speed without using memory, so it will have to stay
that way for the time being.

All in all, you can have a fair amount of confidence that
your ISP can run Interchange. Or, you can get one who will. 8-)

=head2 How can I unzip the file?

Use your ZIP program to extract to a directory and then run C<setup.bat>
or C<configure.bat>.

The ZIP file is identical to the tar file except for the presence of
three files, C<cygwin.dll>, C<setup.pl>, and C<setup.bat>.

If you are planning on installing it on UNIX, it really should
be untarred on a UNIX machine.  Though some Windows ZIP clients will
handle the file type, it is best if you just get the README file
from the same place you got the distribution and read that.

On the UNIX machine, typically your company server or ISP server,
you need to do:

    gzip -dc minivend-X.XX.tar.gz | tar xvf -

If you have transferred the file to your Wintel machine before
then transferring it to the ISP, make sure you have done all transfers
in BINARY mode. You will have weird problems if you have made one or
more of the transfers in ASCII mode.

=head2 About MiniVend, Interchange's ancestor

Minivend was originally based on Vend by Andrew Wilcox.

Vend was written by Andrew Wilcox in the early part of 1995, and
the first released (beta) version was 0.2.  Vend 0.2 is the
parent of MiniVend, and the first version of MiniVend (called
Vend 0.2m7) was totally based on that.  It added searching and
DBM catalog storage.  Subsequent versions took parts from Vend
0.3, especially the VLINK and Server.pm modules, which were
adapted to run with MiniVend.

The first release of MiniVend (0.2m7) was on December 28, 1995, making
it nearly five years old.  A veritable eon in web time!

Minivend grew over time to thousands of users worldwide.

=head2 Why doesn't my question get an answer on the mail list?

Usually it is for one of the following reasons:

=over 4

=item *

It is of the "It doesn't work. HEEELLLP!!!" variety.
Such messages are often ignored by people on the mail list. (They
figure you need help if you are posting a question.)

=item *

The question is posted in HTML. Many people don't have HTML-capable
mailers and will not bother to read it. Your message is more likely to
be answered if you put it in plain old ASCII format.

=item *

You used the wrong return email address, or you spam-blocked the email
address. Most people will not field the instructions nor bother to re-send
when it bounces.

=item *

The subject line is not informative. "[item-list] tag" is better
than "It doesn't work".

=item *

Information needed for support is not included or is not
intelligible. Version of Interchange, operating system and/or virtual
server type, HTTP server (i.e. Apache), and database types in use are
all relevant to most questions.

=item *

The question is not easily comprehended.

Sometimes this is due to language difficulties. While there are many
Interchange users speaking many different languages, and there are a couple
of language-specific user lists, the language on the main mail list is
English. The clearer the question, the more likely you are to get an
answer. Babelfish translations will probably not get it.

=item *

The question makes unreasonable demands. For instance, if you are trying
to build a multi-store mall, and you are asking for step-by-step instructions
on how to do it, you are unlikely to get an answer.

=item *

Question is answered in this FAQ, the README, or by doing a
simple text search (with keywords you mention) in the documentation.
Most people won't do manual reading for you -- they expect you to
take the time yourself.

=item *

The message does not mention what is in all of the error logs, i.e.
both the main error.log and your catalog error.log.  HTTP server
error log entries are also nice to know about, though it is understood
that many people don't have access to them.

=item *

The message does not mention what is NOT in the error logs. If you
don't mention it, it will be presumed you did not look.

=item *

No one knows the answer.

=back

=head2 Is Interchange secure?

Maybe.  It has had a couple of security exploits found over time, all
of which have been corrected quickly.  It uses the Perl Safe.pm module
for user-embedded Perl subroutines and conditionals to make use of those
pretty carefree.

However, there are definite potential problems with credit card number
security that can be avoided:

=over 4

=item *

B<Unencrypted credit card numbers stored on disk.>

If you don't use Interchange's encryption capability for encrypting credit
card numbers, or the real-time payment (CyberCash, etc.) interface,
then there will be unencrypted credit card numbers present in your
session database files.

If your system is the target of a break in, then these numbers
would be available to any user ID that can read the session
files.

This is the reason Interchange defaults to read/write permission
for the Interchange user only.

=item *

B<Unencrypted credit card numbers sent via email.>

The same things apply for orders sent via email.  If it is
not encrypted with PGP, then it is at risk.

The default demos also store the orders in the file etc/tracking.asc,
so you should check there as well if you want to scrub existing
credit card numbers on disk.

=item *

Running in INET mode from another machine.

If you are using INET mode, and the transmission is going via the
network to another machine (i.e. not localhost), then you should be
possibly concerned about which wires your SSL-encrypted data is
traveling over.  You should be behind a firewall, firewall router,
or at least some sort of spoofing-protected filter.

=item *

Running SQL databases without WRITE_CONTROL or other permission
blocks. 

It is possible to enter arbitrary SQL in some search definitions. Though
Interchange tries to block non-select calls, this is not bulletproof. It 
is best to have certain tables be read-only for Interchange, i.e. no insert
or update permission. For tables that must be updated (i.e. userdb, transactions,
and orderline) should use the WRITE_CONTROL capability and the
NoSearch directive to protect them.

=item *

Running with AllowGlobal set. This allows the user programming the catalog
to do anything the Interchange user ID can, and also disables the Safe.pm checking
for embedded Perl code. We recommend that you write global UserTag routines
instead of using AllowGlobal.

=back

The bottom line is that security needs to be your concern.  Interchange tries
to warn you and provide means for protecting customer data, but it can't
stop you from doing all unwise things.  Akopia wants to make Interchange
secure, but you can see that we must stand behind the license
for Interchange and disclaim all responsibility.

=head2 What HTML editors work with Interchange?

None, really, though by accepting a performance penalty you can embed
many Interchange tags inside of regular HTML with things like:

    [pragma no_html_parse 0]
    <A HREF="[href minivend_page]">Link</A>
    <SCRIPT LANGUAGE=MV MV="set Action">
        mv_todo=return
        mv_nextpage=your_page
    </SCRIPT>

You will probably have to edit Interchange pages by hand.

Some HTML editors have a tag like <NOTOUCH></NOTOUCH> 
that defines regions which should not be wrapped or reformatted
by the editor. You should use this.

Also, if uploading a page from a Mac or PC make sure to upload in
ASCII (i.e. non-image) mode. If you ignore this, you can break 
your Interchange catalog!

=head2 What can you expect in the way of support?

What we will typically do:

=over 4

=item *

Follow up on cogent bug reports, usually with fairly quick response. A bug
is not that you cannot install Interchange -- it is a demonstrated fault in
the program logic that can be duplicated. A cogent bug report is detailed
and concise, and includes HTML/code snippets that demonstrate the problem.

=item *

Take note of faults in the demonstrations. Any fixes will be discussed on
the mailing list and I<may> be fixed in the next release version
of Interchange.

=item *

Take note of faults in the documentation and update the next release
version of Interchange. If you provide edited replacement text it is
appreciated. The documentation source is available if you would like to
see how it is maintained.

=item *

Try to answer some of the well-presented questions that appear on the mailing list.

=item *

Try to constantly and incrementally improve the FAQ and other supporting
information.

=back

All of these are things we try to do. There is no commitment -- check
your license for Interchange. All are done on a time-available basis.

What we will not do:

=over 4

=item *

Accept phone calls about Interchange.

=item *

Answer questions that are URGENT or cry for HELLLPPP!!!! These are reserved
for fee-based support.

=item *

Conduct tutorials except on the forum of the mail list.

=item *

Visit a URL to look at a problem unless it is accompanied by a problem
description.

=item *

Conduct a Q&A to extract needed information; we need versions, conditions,
and symptoms before we can even begin to help.

=back


=head2 Where can I get more help?

If you cannot work with Interchange without more help, Akopia provides
fee-based support.

Or you can engage a consultant to help with integration and
administration. The ideal consultant will have a complete understanding
of web servers, HTML, databases, and Perl.

If you cannot find a consultant, you might post to the mail list and
solicit help. Several competent consultants frequent the list and may
respond.

=head2 How does Interchange compare with other shopping carts?

Interchange is a full-featured shopping cart with high-end power.  It can
and does maintain databases of hundreds of thousands of items or more, and
is frequently used in catalogs with hundreds or many thousands of items.

Interchange is database-based.  It has a complex implementation and a
fairly steep learning curve.  If all you are ever going to catalog is
just a few items, and/or the items will not frequently change, Interchange
is probably overkill for your needs. It may make more sense to go with
a simpler cart that embeds the product information in the page and does
not require database setup.

Things that might call for the use of Interchange:

=over 4

=item *

hundreds of items or more

=item *

many different catalogs maintained by same organization

=item *

product offering will frequently change

=item *

need for programmable product display

=item *

need for complex ordering interaction

=item *

delivery of soft goods after real-time charge of credit cards

=item *

need flexible searching and categorization options

=back

When Interchange might not be the right choice and you might want to
use another free cart

=over 4


=item *

only a few items

=item *

items will not change much

=back


When to consider a commercial product

=over 4


=item *

you want power, but want to interact only through a site building system
like MS FrontPage or Netobjects Fustion

=item *

you want to interact only through a GUI like Windows and not edit files

=back

When comparing Interchange to commercial products, the comparison is better
drawn to the higher end ones costing thousands of dollars rather than
the low end ones costing hundreds of dollars.

One user says:

    -- MiniVend is an electronic commerce development environment; 
       *not* a shopping cart.

This is not far from the truth, though modifying the "simple" or "basic"
demo seems to work for many users.

Despite being free, Interchange will require an investment -- either your
time or the money to engage a consultant skilled in the web and in databases.
If given its due, Interchange can provide power that no other free shopping
cart has.

=head2 I want to partner with you, or exchange links, or ....

We receive many, many requests for this type of thing. The answer is almost
always no, we are not interested. We might be interested if there is a big
check or significant Perl expertise being offered.

=over 4

=item Payment gateways

There are literally dozens of different companies doing e-commerce payment
services on the web. We have received inquiries from many of them over time.
The only way we will consider putting in support for a specific payment gateway
is if it is a funded consulting project. This is usually thousands of dollars
and is prohibitive 

Users have integrated Interchange with many different payment gateways -- we
have done various versions of CyberCash, Signio, and Authorize.net over time.
We support CyberCash and Signio directly in Interchange as market leaders;
also, Interchange makes it pretty easy to integrate your own gateway.

=item Directory listings

You may list Interchange in your software directory.
We probably do not want to be on your mail list and probably don't have
time to maintain the listing.

=item CD-ROM distributions

You may distribute Interchange unchanged on your CDROM. We like to get a copy
if you do, but that is not strictly required.

=item Reselling

You can't resell Interchange because it is Gnu GPL licensed; but you can give
it away. See the www.gnu.org website for more information.

=head2 How many Interchange installations are there?

This is unknown. Thousands of separate catalogs have
been made, but we stopped counting quite a while ago. Minivend is known to
have been downloaded at least 800,000 times. If 1% of downloaders each
made one catalog that would make 8,000. There are at least a few "farms"
of catalogs, some that encompass hundreds of domains.

The best guess of number of active users comes from the mail list. If
20% of users are on the mail lists then there would be about 7,000
users.

(All numbers are SWAGs as of March 2000.)

=head1 Configuration Problems

Most Interchange configuration and setup problems are due to one
of:

=over 4

=item Wrong information given to makecat program

THIS IS BY FAR THE MOST COMMON PROBLEM.

To install a working demo, Interchange needs to know what DocumentRoot
is and how to run CGI programs. Details of this setup are server- and
site-specific, and you may need to do some research.

Re-run the configuration again, and I<pay close attention> to the
prompts given. There are examples given which apply to most systems.

If your web server is Apache or NCSA, Interchange will try and parse its
C<httpd.conf> file to help you along, but many ISPs don't allow users
to read these and it may fail.

=item Too-low version of Perl

If you have a Perl earlier than 5.005, Interchange will not work.
Don't even try an earlier version; you must update.

=item Perl compiled with USE_THREADS

Run C<perl -V>. If you see -DUSE_THREADS in the compilation definition,
you might run into problems with Interchange.

=back

=head2 VLINK or TLINK compile problems

(None of this is valid for Windows. Use the precompiled C<tlink.exe or tlink.pl>.)

The latest version of C<vlink.c> and C<tlink.c> have been compiled on
the following systems:

    AIX 4.1
    BSD2.0 (Pentium/x86)
    Digital Unix (OSF/Alpha)
    FreeBSD 2.x and 3.x
    IRIX 5.3, IRIX 6.1
    Linux
    SCO OpenServer 5.x
    Solaris 2.x (Sun compiler and GCC)
    Solaris 7 (Sun compiler and GCC)
    SunOS 4.1.4

Some problems may occur.  In general, you can ignore warnings
about pointers.

Make sure that you have run the configure program in the src directory.
If you use Interchange's makecat program it will try to compile an appropriate
link at that time, and will substitute tlink.pl if that doesn't work.

You can compile manually with the proper settings with this series
of commands:

    cd src
    ./configure
    perl -e 'do "syscfg"; system ("$CC $CFLAGS $DEFS $LIBS -o tlink tlink.c")'
    perl -e 'do "syscfg"; system ("$CC $CFLAGS $DEFS $LIBS -o vlink vlink.c")'

There is also a C<compile_link> program which has docmentation embedded
and which will compile an approprate link.

If you cannot compile, try using the C<tlink.pl> script which should work
on most any system.

=head2 We're sorry, the Interchange server is unavailable...

This is the most common problem on UNIX systems.  It almost always
means that permissions are not properly set up, or that the VLINK
program is not setuid. Try temporarily changing the permission of
the MINIVEND_ROOT/etc/socket file to be read/write to all groups
(C<chmod 666 etc/socket>). This must be done I<after> the
server is started, as Interchange deletes and recreates the socket every
time it starts. If Interchange then works you will have to make sure the
user that the VLINK program runs as matches the user who is running the
Interchange daemon.

<HR>
B<You cannot run  the Interchange software as> C<root>.
If you are setting MiniVend up for the entire machine, and not just as a
virtual host user, it is usual to create a special C<ichange> or C<interchange>
user to run the daemon and the link program.  This means the directory
listing for your CGI-BIN should be something like:

 -rwsr-xr-x   1 interchange users        6312 Dec 30 11:39 cgi-bin/simple

and for the socket file it should be:

 srw-------   1 interchange users           0 Dec 30 11:41 etc/socket

Once you have set up the software, you can easily install catalogs
as root B<as long as your C<umask> is set to 2 or 22>.

(The following assumes you have made the Interchange software owned
and run by the special user C<mvend> and that each user has
a Interchange catalogs directory C</home/user/catalogs>).

The best way to set permissions on a multi-user system is to make
all files group readable and writable (660 or 664 mode). If you have
a system setup that places each user in their own group, then make
C<mvend> a member of each user's group and set ownership and
permissions with:

	find /home/user/catalogs -print | xargs chown user
	find /home/user/catalogs -print | xargs chgrp user
	find /home/user/catalogs -print | xargs chmod g+rw

For best results, make the user's default umask be 2 so that they will
by default create files that have the proper permissions.

If you have all users in the same group, the above is not secure. You should
put C<mvend> in a group of which no user is a member (perhaps mvend
would be a good choice) and then make all files owned by the group mvend
and all directories be set to mode 2770:

	find /home/user/catalogs -print | xargs chown user
	find /home/user/catalogs -print | xargs chgrp mvend
	find /home/user/catalogs -print | xargs chmod g+rw
	find /home/user/catalogs -type d -print | xargs chmod g+s

This will make files default to the proper group when created (on most
UNIX versions, anyway).
<HR>

If you are on a virtual hosting system, the procedure varies. Making
the program setuid should work for most systems -- if your setup uses
CGI-WRAP or another setuid scheme it should still work OK, though you
may have to I<unset> the setuid bit with C<chmod u-s cgi-bin/simple>
or the like. If you have a non-standard CGI setup, as some virtual host
systems do, you will need to know something about UNIX and the web -- or
engage a consultant -- to properly set the paths up.  Usually switching
to TLINK/INET mode is the easiest thing to do, though with B<Iserver>
and a few others it may take more than that.  <HR>

If you used the C<makecat> program to build the catalog, it should
warn you if it was not able to make the link program setuid. To set the
program (in the file C<cgi-bin/simple> in this example) to be setuid, you
use the command:

    chmod u+s cgi-bin/simple

=head2 Error -- the Interchange server was not running...

This indicates that the link CGI is not communicating with the Interchange server.

B<IMPORTANT NOTE:> The server should
always be started by the same user ID which owns the suid
I<vlink> program.  (This does not apply to TLINK/INET mode.)

The server must be running, first of all.  If you didn't start it,
you can do so by going to the B<Interchange home directory> and typing:

    bin/start

You can check to see if your server is running by typing:

    Linux, SunOS, BSD:    ps -ax | grep minivend
    Most other systems:   ps -elf | grep minivend

B<Note>: Solaris and IRIX truncate the string, and doesn't allow setting of
the $0 parameter. You may have to grep for 'perl' instead.

If the server is not running, it may have failed due to another process
occupying the TCP socket 7786.  If using VLINK, you may start Interchange
with C<start -u>, which will not monitor the internet-domain socket.

If VLINK is not communicating with the server, there are a number of possible
reasons.  First, if you are trying to run Interchange on an ISP, go to the section
about ISP problems -- it is probably one of those.  If you are running
Interchange on a single machine, it is probably one of:

    1. Permissions problems
    2. Interchange on NFS-mounted file system

Permissions are easy.  If you for some reason can't run VLINK as an SUID
program (SUID to your user ID, not to root), then you will need to
make permissions more permissive.  See the Interchange documentation
for how to use the ReadPermission and WritePermission directives to
make the session files and sockets 'group' or 'world' readable and writable.
If you can make your UID, or the one you have chosen to own Interchange, the
same group as your HTTP user, then you can make the files group read-write.
If you can't, you will have to set the dreaded 'world' permissions.

If you are running Interchange on an NFS-mounted file system it cannot run
in server mode, because UNIX-domain sockets don't work on NFS. You will
need to change to static mode from server mode, or better yet, put
Interchange on a file system that is directly mounted.

You can use Interchange in INET mode along with the
tlink.c program to allow running across NFS boundaries. If you have
not changed the configured defaults, and still it will not communicate,
you should try setting the LINK_HOST and LINK_PORT directives in tlink.c
and recompiling.
<hr>

=head2 I get messages like 'Config.pm not found'. What does it mean?

This means your Perl is not properly installed, or that Interchange is
not using the proper Perl binary. On UNIX, try reinstalling Interchange and
using the standard Perl installation sequence:

    /complete/path/to/proper/perl Makefile.PL
    make
    make test
    make install

Otherwise, contact your system administrator.

=head2 Your demo has a very large price for the first item, and when I change the quantity the price drops precipitously.

This is a feeble attempt at humor in the older C<simple> demo catalog.
Check out the B<Quantity Pricing> feature of Interchange. Try looking at:

    http://interchange.akopia.com/cgi-bin/simple/quantity?;00-0011

=head2 Can't locate lib.pm in @INC. BEGIN failed--compilation aborted.

Your Perl is not properly installed. Someone has put a Perl up on your
system, then either moved or removed the library directory.

Contact your system administrator and ask them to re-install Perl.

=head2 Can I run Interchange on my Macintosh?

No. Interchange will not run on a Macintosh running System 7 or other
"Finder" operating system. If some technically-oriented user would
port it, or someone will give Interchange's author a PowerMac, then
it might. 8-)

Interchange's *files* can be manipulated by any computer. As long as
uploads/downloads of database source, pages, and configuration files
are done in ASCII mode, there is no reason you can't edit them on your
Mac. And with MySQL or other ODBC databases on your UNIX-based ISP,
you can even directly interface to the database you use with Interchange --
provided you have the scarce ODBC middleware needed for the Mac.  But you
must run it on UNIX or another Mac operating system.  Interchange I<does>
run on MkLinux, Linux PPC, and OS/X.

=head2 Shopping cart is dropped when using SSL.

This is usually due to the HostnameLookups (Stronghold/Apache parameter)
not matching for the two servers, secure and non-secure. It can also be
caused by the user having different web proxy addresses for HTTP and HTTPS.

If it still does not work, then try changing some of the appropriate
configuration parameters in minivend.cfg:

    DomainTail   No
    IpHead       Yes

If you still are having problems,
try this combination in catalog.cfg, the catalog configuration
file:

    SessionExpire  10 minutes
    WideOpen       Yes

The above setting will typically make Interchange work when it is possible
to work.

Sometimes when you have multiple Interchange servers sharing the same 
secure server, you will have problems after accessing the second
one. (The first one issues a session ID cookie, and that causes
problems).

=head2 Segmentation fault or other core dump

If this happens when you run the Interchange test or server,
it is always a Perl that has a problem. Not sometimes, always.

A proper Perl should never have a segmentation violation, period.
And it should not dump core (unless you passed it a C<-u> option somehow).

You will need to either update Perl or report the bug to the proper
personnel. Depending on your situation and technical ability, this may
be your system admin, ISP, or the Perl porters.

=head2 XXXXXX.pm does not match executable version.

This is a Perl which does not have the right Perl library
installed.  It usually results from a naive system administrator
who thinks they can bypass the 'make install' for Perl and
just copy the Perl binary or directories.

In any case, it has nothing to do with Interchange when you are running
on UNIX. Interchange does not include any compiled libraries.

=head2 Interchange doesn't work with RedHat 5.0 (glibc)

This is a defective Perl distributed by RedHat.
The problem is that they don't take GLIBC into account. It
will pass make test 100%, but strftime dumps core on a segfault.

You shouldn't run RedHat 5.0 anyway; it has drastic security problems.
Update to a later version and build a new Perl.

=head1 ISP Problems

Great strides have been made since Interchange's early days. The great
majority of ISPs provide some CGI service, and more and more
run systems that are compatible with Interchange.  The new catalog
configurator for Interchange makes setup much easier.

A word of warning -- if you chose your ISP mostly on price, you can
expect problems. There is no such thing as a free lunch; the low-cost
providers typically have heavily-loaded machines and many domains. The
more domains and the more load the unhappier you will be with Interchange.
Interchange works best on a fast machine with plenty of memory.

A few Internet Service Provider (ISP) systems still have difficulty with
one or the other aspect of running Interchange.  A few cannot (or will
not) run Interchange at all.  On top of that, many times ISP personnel are
too busy to help, won't help, or don't know enough to help.  Some are
secretive about details of the setup of their systems. 

All in all, you can have a fair amount of confidence that
your ISP can run Interchange. Or, you can get one who will. 8-)

=head2 No shell access allowed on my ISP.

This used to mean that you were totally out of luck. You probably
still are, but it is at least I<possible> to run Interchange on
a virtual server such as HWY.NET.

You should be able to use the tlink.pl program and INET mode to start
using Interchange -- with quite a bit of work.  You will need to hand-edit
all of the configuration files, and use tlink.pl with the appropriate
settings. Long term, you should put a compiled tlink in place.

You will also have to start the Interchange daemon via a CGI program
that you write.

Bottom line: don't try this unless most people call you a wizard. 8-)

The Interchange web site has pointers to ISPs who happily host Interchange.

=head2 No C compiler to compile VLINK or SVEND.

Since VLINK needs certain values set in the source before compilation, a
pre-compiled version will not work.  It is recommended that you get the latest
version of Interchange and run in INET mode along with the tlink.pl Perl-based
link program.

A pre-compiled tlink.c might also work for you if you can use
the defaults of 'localhost' and port 7786.

=head2 Perl version too low

Interchange requires Perl 5.005 or higher. Perl 5.6.0 or higher
is strongly recommended.

=head2 We're sorry, the Interchange server is unavailable...

I<The below all assume you were able to start the Interchange server.>

This could be almost anything, but with a properly configured Interchange
it is almost undoubtedly due to your CGI-BIN and/or your Interchange
directory being located on a different filesystem than the actual machine
that is executing the program.  VLINK uses UNIX-domain sockets, which
don't work on NFS-mounted filesystems.

Iserver.com and other systems which use chroot HTTP servers require
quite a bit of extra configuration to get going.

If you have not been careful to set permissions properly when running
in VLINK/UNIX mode, the link CGI will not be able to communicate with
the Interchange server.  Please read the documentation, which covers this
in detail.

You can run in INET mode with the C<tlink> link program
to prevent those problems.

=head2 Document contains no data or premature end of script headers (especially on BSDI or FreeBSD)

This usually means that your HTTP server ran out of resources
during the execution of the link program.  It couldn't create more
sockets, is unable to create a process, or can't open any more files.

This happens especially in frames catalogs, when Interchange is
sending more than one page simultaneously.  And even more especially
on FreeBSD and BSDI, which are often distributed with the kernel parameters
SOMAXCONN and CHILD_MAX set to levels unsuitable for serving
the web.

Go to

    http://www.deja.com

and try searching on for MAXUSERS -- this should give you plenty of pointers
on how to set those parameters properly.

=head2 My provider runs Windows NT

Interchange is unlikely to work on Windows NT ISPs in the near future. If
you have a dedicated NT machine, there is a version of Interchange for
Windows NT. It may work for you, but there are differences in
operation from the UNIX version (mostly due to NT's lack of fork()
or and lack of user-space threading support in Perl).

=head2 Interchange server only runs for a while, then dies.

Many ISPs don't allow your user ID to run a program unless it is logged
in!  The moment a watchdog program notices a daemon running with a
non-logged-in UID, it terminates the program.  Or it terminates programs
that haven't been active for XX minutes.  Contact your ISP about this --
they may be able to do something for you.

=head1 Things about Interchange that people sometimes don't understand....

There are a few things that seem to escape some users
in the documentation. This is no doubt due to the author's
closeness and familiarity with the concepts of Interchange.

This section attempts to explain some of these basic issues.

=head2 Is Interchange a script, an application, or what? Why is it so big?

Interchange is not just a script. It is a combination of many programs, Perl
modules, and links to other subsystems such as SQL databases, CyberCash,
PGP, and the Glimpse search engine.

It is so big because it is more than just a shopping cart -- it is a complete
database access and retrieval application. It uses no more memory than some
large database servers.

This means that Interchange is probably not a good choice for someone who is
going to offer only a few products. It is optimized for catalogs of
more than a hundred items -- catalogs that expect to change and grow
over time.  It is suitable for very large catalogs.

=head2 What is a daemon? Why is Interchange a daemon?

A daemon is a program that always is running in the background on
the system, initialized and waiting for something to do. Interchange
runs as a daemon in the normal course of events.

Other programs that you may be familiar with that run as daemons
in most cases:

=over 4

=item *

HTTP server (Apache, etc.)

=item *

MySQL, mSQL, Oracle, and other SQL servers

=item *

Sendmail

=back

Interchange takes an appreciable amount of time to compile and load
even on the fastest systems.  It has many configuration options,
and can serve hundreds of catalogs. If it were to be loaded every time
a user accessed it, it would be unusable.

The daemon approach allows a rich set of features to be accessed
fast. The actual CGI program (vlink or tlink) is a small program
written in C -- it communicates with the minivend daemon.

One of the side effects of this is that when you change a configuration
file, you must tell Interchange. You do this either by restarting the
server, or better yet, using the I<reconfig> script to reconfigure
an individual catalog.

=head2 Hey, where are the pages?

Interchange pages are not kept in normal HTML space. Look in the
catalog subdirectory pages.

The pages are always filtered through the Interchange daemon before
being delivered.

=head2 Hey, where are the images?

Interchange is a CGI program, and if you tried to use relative
image paths you would end up with IMG tags like 

    <IMG SRC="/cgi-bin/simple/../whatever.jpg">

Not what you want. So Interchange by default uses an
C<ImageDir> for a prefix. In the demo that would
be C</simple/images/>, so image specs that have no
absolute path information are prefixed with that.

In your Interchange page, this tag

    <IMG SRC="ordernow.gif">

will become

    <IMG SRC="/simple/images/ordernow.gif">

and this:

    <IMG SRC="items/00-0011.jpg">

will become

    <IMG SRC="/simple/images/items/00-0011.jpg">

Absolute image paths are not affected, so if you reference
an image at /other/images/whatever.gif, it will not be touched.

=head2 My [item-field name] tag isn't working! (or [loop-field ...] or [foo-field ..]

Read the fine manual. You probably want [item-data foo name]
instead.

The C<[item-field name]> tag normally only references items
in the C<products> table.

The reason for this is the scenario where you split your
products over multiple tables using the C<ProductFiles>
directive, Perhaps you have one named C<new>
and one C<used>, or one for several different vendors.

The C<[item-field ...]> tag will select
the data from the first C<ProductFiles> entry that
pertains.

If you want to call data from a specific table, use
C<[item-data table column]>.

=head2 How do you pass variables from page to page?

No effort needed -- Interchange does this automatically.

Every user session that is started by Interchange automatically
creates a variable set for the user. As long as the user
session is maintained, and does not expire, any variables
you set on a form will be "remembered" in future sessions.

Don't use the prefix mv_ for your own variables -- Interchange
treats these specially and they may not behave as you wish.
Use the mv_ variables only as they are documented.

Also, because you can set so many variables, Interchange does
not unset variables it does not find on the current form.
That means you can't expect a checkbox to become unchecked
unless you explicitly reset it.

=head2 How can I tell when I need to quote a tag inside a tag?

In general, you don't need to quote the following tags
which are interpreted first within a list:

    [item-code] [item-data ...] [item-field ...] etc.
    [loop-code] [loop-data ...] [loop-field ...] etc.
    [foo-code]  [foo-data ...]   [foo-field ...] etc.

This is because they are interpreted as a part of the 
surrounding C<[loop]>, C<[item-list]>, C<[search-list]>,
C<[sql list]>, or C<[tag each table]> constructs.

So this will work:

    [item-list]
    [page [item-field url]]detailed info[/page] on [item-description]
    [/item-list]

This will I<not> work:

    [page [value mypage]]

The [value ...] tag is not interpolated before page, and the parser will
not know to do so. It needs to be instead:

    [page href="[value mypage]"]

Clear as mud, right? Well, at least if you quote them all you can't go
wrong. 8-)

You might wonder why unquoted tags are even allowed. The answer is
performance; if you have large lists of tags you can achieve significant
speedups by using positional parameters. It requires CPU power to parse
and disassemble the named parameters.

=head2 Can I use Interchange with my existing static catalog pages?

Yes, but you probably won't want to in the long run.

Interchange is designed to build pages based on templates,
from a database.  If all you want is a shopping cart, you
probably should use a simpler program.

It is not difficult to convert existing static pages
to Interchange, but maintaining them can be a nightmare.

That being said, all you usually have to do to place an order
link on a page is:

    <A HREF="/cgi-bin/simple/order?mv_order_item=SKU_OF_ITEM">Order!</A>

Replace C</cgi-bin/simple> with the path to your Interchange link.

=head1 SQL Questions

=head2 Does Interchange require SQL?

No.

Interchange does not require SQL. If you have a small database
with no particular desire to integrate your own toolset, you may be 
more comfortable using Interchange's internal database.

Bear in mind that the order manangement functions of Interchange will
be slow and not as robust without SQL. SQL is strongly recommended for
at least these three tables:

	orderline
	transactions
	userdb

=head2 I can't get SQL to work -- Undefined subroutine &Vend::Table::DBI::create ...

This probably means one of:

=over 4

=item No SQL database

Interchange doesn't include a SQL database. You must select one and
install it.

=item no DBI

You must install Perl's DBI module before using Interchange with SQL. You
can see where to get it at http://www.cpan.org, or try:

    perl -MCPAN -e 'install DBI'

=item no DBD

You must install the specific Perl DBD module for your database
before using Interchange with SQL. You can see where to get it at
http://www.cpan.org, or try:

    perl -MCPAN -e 'install DBD::XXXXX'

where XXXX is the name of your module. Some of them are:

    Adabas
    DB2
    Informix
    Ingres
    ODBC
    Oracle
    Pg
    Solid
    Sybase
    Unify
    XBase
    mSQL
    mysql

=back

If you can't make this script run without error:

    use DBI;
    use DBD::XXXXX;

then you don't have one of the above, and Interchange will never run
a SQL type.

=item I don't like the column types that Interchange defines!

Then change them. See the simple/mysql directory for some examples
under MySQL.

=item I change the ASCII file, but the table is not updated. Why?

Interchange writes an empty file TABLE.sql (where TABLE is the name
of the table). When this is present, Interchange will never update
the table from disk.

Also, if you have changed the field names in the file, you must
restart the catalog (Apply Changes) before they will be picked up.

=item Why do I even need an ASCII file?

Interchange wants some source for column names initially. If you don't
want to have one, just create a TABLENAME.sql file in the C<products>
directory. For example, if you have this:

    Database products products.txt dbi:mysql:test_minivend

then create a file C<products/products.sql>. For

    Database pricing pricing.txt dbi:mysql:test_minivend

create a file C<products/pricing.sql>. Etc.

=item Interchange overwrites my predefined table!

Yes, it will if you don't create a file called TABLENAME.sql, where
C<TABLENAME> is the name of the Interchange table. If you want this to
happen by default, then set C<NoImport TABLENAME>.

=head2 How can I use Interchange with Microsoft Access?

Though Interchange has ODBC capability, the Microsoft Access
ODBC driver is not a network driver.  You cannot access it
on a PC from your ISP or UNIX system.

However, you can turn it around.  Once you have created a MySQL or
other SQL database on the UNIX machine, you may then obtain the Windows
ODBC driver for the database (mySQL has a package called myODBC) and
use the UNIX database as a data source for your PC-based database
program.

Here is a quick procedure that might get you started:

=over 4


=item *

Get and mySQL from:

    http://www.mysql.com

Install it on your UNIX box. On Linux it is as easy as getting the RPM distribution:


    http://www.mysql.com/rpm/

You install it by typing, as root, C<rpm -i mysql-3.XX.XX.rpm>. If you are not
root, you will have to build the source distribution.

=item *

To avoid permissions problems for your testing, stop
the mysql daemon and allow global read-write access with:

    mysqladmin shutdown
    safe_mysqld --skip-grant-tables &

Obviously, you will want to study mySQL permissions and set
up some security pretty quickly.  It has excellent capability in
that area, and the FAQ will help you get over the hurdles.


=item *

Set up a database for testing on the UNIX machine:

    mysqladmin create test_odbc
    mysql test_odbc

Make an SQL query to set up a table, for example:


    mysql> create table test_me ( code char(20), testdata char(20) );
    Query OK, 0 rows affected (0.29 sec)

    mysql> insert into test_me VALUES ('key1', 'data1');
    Query OK, 1 rows affected (0.00 sec)

    mysql> insert into test_me VALUES ('key2', 'data2');
    Query OK, 1 rows affected (0.00 sec)

    mysql>


=item *

Get and install myODBC, also from the MySQL site (use a mirror):

    http://www.mysql.com

You install this package on your Windows 95 or NT box.  It is a simple
setup.exe process which leads you to the control panel for setting up an
ODBC data source.  Set up a data source named C<test_odbc> that points
to the database C<test_odbc> on the UNIX box. You will need to know the
host name and the port (usually 3306).

=item *

With MS-Access, you can then open a blank database and select
File/Get External Data/Link Tables. Select File Type of 'ODBC databases',
and the proper data source, and voila! You should have access to
the database residing on the UNIX side.

=back


=head1 Setup Questions

Interchange is quite powerful, but also quite complex. There are many
possibilities opened up with its conditional HTML, but also many
pitfalls.

Read the documentation thoroughly, then inspect the C<basic>
and C<simple> demo pages for help.  Pay particular attention to:

    browse*.html
    flypage.html
    results.html
    ord/basket.html
    ord/checkout.html

These pages use many of the powerful features of Interchange, and studying
them will be instructive.

=head2 Can I run multiple catalogs on one server?

Yes. Interchange supports multiple independent catalogs. There are
users who run more than 500 catalogs on a single machine. The capacity
is usually a function of how busy the catalogs are and how much memory
and processor speed your system has.

=head2 How do I start Interchange when I reboot?

Use the standard facility on your operating system.  For BSD
style systems, the file is usually called rc.local (in the
/etc directory).

On SVR4 systems, it is quite a bit more complex -- look
for the /etc/rc.d directory and see what other programs do.
Often the file is called S99startup or something similar.

B<IMPORTANT NOTE:> Interchange must not run as root, which is
the user that the startup file executes as.

The technique to start up depends on the facility of
your su(1) command.  This should work on most operating
systems:

    su minivend <<EOF
    /your/minivend/dir/bin/restart
    EOF

The B<EOF> must be the only thing on the line (no leading
or trailing whitespace).

If your su(1) command has a C<-c> option (as most System 5
UNIXes do) then you can just do:

    su -c /your/minivend/dir/bin/restart minivend

Interchange supplies a C<restart> script which tries to do the above
portably. It works on many operating systems (Linux and Solaris have
been tested by the author.)

=head2 How do I set up a Mall?

Interchange can share product databases, session files, and any
other databases. It has many features which support mall building.

You can easily build separate and mostly identical catalogs which
you link to via HTML.

But building a mall is as much an exercise in data and process as
in software. Consider the following questions:

=over 4

=item 1

Who will be clearing payment?

=item 1

What happens if everyone doesn't have the same tax rate?

=item 1

How will you clear orders to multiple vendors?

=item 1

How will you bring together multiple types of shipping?

=item 1

How will the vendors get product data (including images) to you?

=back

If you cannot answer those questions and then visualize how to build a
mall, then you probably should not try.

=head2 Can I attach a size or color to a product?

Interchange has product modifiers, or attributes, which can
be carried around with the product.

The [item-accessories I<attribute>] tag will automatically place a
suitable select widget on an HTML form, and "remember" what should
be selected.  See the Interchange documentation for B<Item Attributes>.

You can use the B<SeparateItems> directive or set the B<mv_separate_items>
variable on the order form to cause ordered items to be put on separate
lines in the shopping basket. (This is the default in the demo
catalogs.) This makes size/color handling much easier for multiple
items. They I<can> be stacked, which means that you can add multiple
instances of a size or color to an individual product within a shopping
cart entry line, but this is too much trouble.

The attribute information is placed on the form with form fields,
like:


  <INPUT TYPE=XXXXX NAME="[modifier-name size]" VALUE="[item-modifier size]">

The embedded Perl capability of Interchange means that you can discover the
number of items on order of each type, and build quite detailed input forms.

The Interchange demos have some examples which should help you -- try ordering
the T-Shirt and visiting its flypage.

=head2 PGP encryption -- Server Error

As always, check the error log.  The most common problem is something
like:


    minivend.com 3Ex5lvta:minivend.com - [01/Sep/1997:09:08:43] simple /cgi-bin/simple
    > Encryption error:
    >

Probable causes:

=over 4

=item Interchange user ID doesn't have keyring

You must have a C<.pgp> or C<.gnupg> directory in the B<home> directory
of the user running Interchange. It is also possible to set an environment
variable (variously PGPPATH or GNUPGPATH) to orient the program correctly.

=item Trust problems

If the key you are sending to has not been signed by another (trusted)
user, then you will get error returns from some flavors of PGP, which
causes the problem.  Sometimes the fix is to route the error output to
/dev/null (at least on UNIX) by changing the EncryptProgram directive
in catalog.cfg:

 EncryptProgram  /usr/bin/pgp -fat -r sales@your.com 2>/dev/null

For GNU Privacy Guard, GPG, you would use something like:

 EncryptProgram /usr/local/bin/gpg -fa --always-trust -r sales@your.com
    
On Windows or other operating systems, the only fix is to sign the
key or otherwise prevent the error from occurring.

=back

=head2 PGP encryption -- What do I do now that it is working?

This depends on what you do with orders once you receive them
by email.

Some PC mail agents (notably Eudora) will decrypt the PGP message
embedded within the message text. In that case, you can simply 
embed the C<[value mv_credit_card_info]> call right in the message
and be done with it.

If your mailer will not decrypt on the fly, the best way to read the
credit card number is to set up MIME encoding of the order email.
To do this, find the order report you are using. In the standard
demos it is C<pages/ord/report.html> or C<etc/report>.

Set up two MIME regions in that file. First, at the top
of the file:

    [tag mime type TEXT/PLAIN; CHARSET=US-ASCII][/tag]
    [tag mime Order Text]

    ORDER DATE: [calc]localtime[/calc]
    ORDER NUMBER: [value mv_order_number]

    Name: [value name]
    Company: [value company]

    (Rest of order text, including item list)
    [/tag]

Then, at the bottom of the report.html file, put the credit card info:

    [if value mv_credit_card_info]
    [tag mime type application/pgp-encrypted][/tag]
    [tag mime Credit Card Information]

    [value mv_credit_card_info]

    [/tag]
    [/if]

Once this is done, you can then read mail, using your PGP client as
a helper application to decode the MIME attachment. This does not
require a fancy setup -- you can use the standard MIT PGP 2.6.2
if desired. If you are using UNIX, set up as the helper for the MIME type
B<application/pgp-encrypted>:


    xterm -e pgp -m %s

On windows, it might be:

    c:\mycommands\pgp -m %s

More automated or user-friendly setups are left as an exercise for the
user.

=head2 How do I get the number of items in a shopping cart?

If it is simply the I<total> number, extended according
to quantity, then you can use the [nitems] tag. If you need this
number for use in an embedded Perl script, you can use

    $number = $Tag->nitems();

If it is the number of line items you need, then you can
use a Perl script:

    [perl]
        return scalar @{$Carts->{main}};
    [/perl]

(The 'main' refers to the main shopping cart.)

If you have SeparateItems in effect, and need the number of
I<unique> items, you could use:

    [perl]
        my $cart = $Carts->{main};
        foreach my $item (@$cart) {
    @items = split /\|/, $items;
    $count = 0;
    for (@items) {
    $count++ unless $seen{$_}++;
    }
    $count;
    [/perl]


=head2 The demo doesn't do...(pick one)

That is because it is a demo.  It is not intended to
be a finished catalog, just a starting point.

Though the author likes to get reports of malfunctions in
the demo, he feels absolutely no urgency about fixing or responding
to such reports.

=head2 Difficulty interacting with browser: Request method for form submission is not POST

There are many possible causes for this error. The main ones are:

=over 4

=item *

This most common case is where the user bookmarks a shopping cart
after Recalc or bookmarks a checkout page. Those pages are usually
the results of form submissions, and are not really a candidate for
a bookmark.  You should make sure you provide links to both of those
pages on the B<interact> special page (in special/interact if you
have started with the demo).

=item *

User hits BACK with a very small cache. There are quite
a few users who have decided 10Kbytes is enough of a cache, and that
won't quite cut it. 8-) (Actually, they probably assumed the
number to enter was in megabytes.)

One possible cause is that you must define B<METHOD=POST> in all of
your forms, not B<METHOD=post>. The lower case form is not recognized
in the HTTP spec.

=item *

If you are using SSL and don't have a later HTTP server (released after
say September of 1997), there is a bug in earlier versions Microsoft
Internet Explorer's version of SSL3. Stronghold 2.1.1 works around this
bug, so if you use Stronghold you should update.

=back


Interchange also allows you to have forms with METHOD=GET.  To use, set
the session ID in your form

    <INPUT TYPE=hidden NAME=mv_session_id VALUE="[data session id]">

You might then try METHOD=GET on forms that have problems.
This may prevent errors due to one of the causes above.

=head2 How can I trace the source of a purchase and run a partners program?

Interchange has a facility that adds a parameter called I<source>
to the session database for that user.

You should give your partners a source code, which must contain
at least one letter character (A-Za-z only). It is placed in the
sourcing URL as a query string of:

    mv_pc=Source1

If this is appended to the URL with which the user B<calls Interchange>
it will then be placed in the session identifier C<source>.

This URL:

    C<<>A HREF="http://yourcatalog.com/cgi-bin/yourcat/sp_offer?mv_pc=Source1">
        Special offer!&lt;/A>

Will yield C<Source1> from the Interchange tag [data session source].

The Interchange 3 idiom ?;;Source1 continues to be supported, so existing partner
sites should work without change.

=head2 How can I send an email copy of the receipt to a user?

There are several ways, but this is a more complex question than
it may seem like it is.

You will have to deal with bad email addresses, deciding which
information to send, showing delivery times, etc. You also have
to be very careful with credit card information -- if you
have not taken the proper security measures (by enabling PGP
credit card encryption or using CyberCash) you might just
mail them their own unencrypted credit card number!

This is supported in Interchange via a UserTag, [email ...]. See
the "simple" and "basic" demos.

=head2 Configuring catalog whatever...Use of uninitialized value at Config.pm line 1614, <CONFIG> chunk 322.

This is a warning from Perl indicating that an empty value was found
where one is expected. The warning is left in so that you know that
something is missing.

Whatever it is, it can be found at the specified "chunk", or line,
of catalog.cfg -- if you use the #include capability, it would have
to be factored in as well.

The usual reason is that a file is specified in one of the directives
(usually one of B<Help SearchProfile OrderProfile Buttonbars UpsZoneFile>)
and does not exist.  See the documentation for the directive on how the
file name should be specified.

<H3> Mini-FAQ: Why isn't the error more enlightening?</H3>

Because Perl won't tell us what exactly went wrong -- see I<it's>
FAQ for why.

=head2 We need some more information! Problem: unspecified error

This is a fault in the order profile, and can be due to any of:

=over 4

=item *

Problems with encryption

=item *

Inadvertently setting the same variable twice on the form, causing
problems due to the embedded null.

=item *

Changing the checkout profile and not testing properly under all conditions.

The order profile must not have non-blank lines that don't contain
valid check procedures (excluding comments). If you are using a Perl
routine in the profile, as above, you must take care that the routine
returns a valid check routine.

=back

=head2 Sorting doesn't work across multiple pages

If you are using the [sort table:field] idiom, it cannot. That sorts data
present in the list only.

=head2 I am searching for a string and it is not found. I know it is there!

Set C<mv_substring_match> to C<yes> (C<su=yes> in one-clicks).

This most commonly happens when searching for non-ISO-8859 (Cyrillic,
or characters like umlaut and eacute) characters in word-match mode. The
problem is, that unless your locale is set up properly that Perl doesn't
think a non-ISO-8859 and a space character is a boundary.

Also, if you are searching for non-alpha characters then they will also
not be interpreted as word characters and the boundary problems will
still exist.

=head2 How do I display Euro pricing?                                                

(Thanks to Thomas "Balu" Walter for this answer.)

You can use Interchange's II8N facilty via the Locale directive:

In catalog.cfg:

 # to define the euro-Settings (PriceDivide is for converting from DM)
 Locale eur_EUR PriceDivide         1.95583
 Locale eur_EUR p_cs_precedes       0
 # this is great - you can even use HTML-Tags to display an euro-image
 Locale eur_EUR currency_symbol     "<IMG src="/path/to/image/euro.gif">"
 Locale eur_EUR p_sep_by_space      2
 Locale eur_EUR mon_decimal_point   ,

 # and the DM
 Locale de_DE
 Locale de_DE p_cs_precedes  0
 Locale de_DE p_sep_by_space 2

On your pages (this is from a search results page, the [item-.... ...] notation
may be different depending on your context):

 [item-price]<br><!-- german is default -->
 [setlocale eur_EUR]
   [currency convert=1][item-field price][/currency]<br><!-- the euro -->
 [setlocale]

Any questions? Read the docs about "Internationalization".

=head1 Performance issues

Interchange is not a lightweight program.

If you are running it on a low-end ISP whose major selling point is low
cost, you will frequently find that Interchange performance is very poor.
This is due to either:

=over 4

=item Not enough memory

If memory is low, the program will "swap" to disk. If lots of swap
is used, you can expect very bad performance. This is the most common
speed problem.

If your ISP uses IDE hard disks you can expect REALLY bad performance.
IDE disks are very slow for multi-user machines, which should have SCSI
if ANY swapping is to be done.

=item Too many domains

If there is a huge amount of traffic on the system, then it can run
at a very high "load average". IF load average runs routinely above
2, you can expect problems.

=item Underpowered machine

If it is an old machine, it may be too slow for Interchange. A Pentium of
less than 300MHz is probably not good enough unless it is completely
dedicated to Interchange. The faster the processor, the happier you will
be.

=head2 Interchange runs, but it's sooo sllooowww...

This is almost certainly due to a system that has inadequate memory
or network bandwidth.  On a moderately fast ISP server with sufficient
memory, pages should start displaying in less than 2 seconds. On a fast
server, pages should start loading almost instantaneously.

=head2 Interchange slows down over time

There are many possible reasons for this, but most have to do with memory
or session database size.

=over 4

=item *

See the documentation on MINIVEND ADMINISTRATION and learn how
to expire your session database. If it gets many megabytes large, then
accessing a key will get slow.

=item *

Second, if your machine is memory-poor you will find that Interchange gets
swapped to disk. Unless your system is very fast, this will greatly hurt
performance.  Interchange works best on a machine that rarely if ever swaps
to disk.

=item *

Third, this often has nothing to do with Interchange at all but has to
do with your HTTP server. Any long-running daemon has the potential for
a memory leak -- try stopping and starting your HTTP server and seeing
what happens to performance.

=back

=head2 The browse.html page (from the demo) is SLOW+!

That is because it is only useful for small product lines. It
pulls out all keys from the entire database and iterates
over them, which is not reasonable for more then 50 products
or so (depending on your server speed).

Look at the browse1.html page instead.

A better approach is to use a search and browse by category, an
example of which is given in the demo.

=head2 I am using SQL, and Interchange is so SLOW.....

It isn't Interchange.

First of all, did you index your 'sku' or other key fields? The reason
Interchange doesn't do it for you is that every SQL database seems to do
that a bit differently. Even then, you can do some stuff with Interchange's
COLUMN_DEF parameter:

  Database  products  COLUMN_DEF  code=char(16) PRIMARY KEY

That will index at least the C<code> field for MySQL. Other databases differ.

Interchange can return VERY fast SQL search results. But you need to at least
give it something to work with. The proper method for fast selection is:

 [query sql="select code,category,title,price from products" ]

 Category: [sql-param category]<BR>
 Title:    <A HREF="[area [sql-code]]"> [sql-param title] </A><BR>
 Price:    <A HREF="[area order [sql-param 0]]"> [sql-param price] </A><BR>

 [/sql]

This is especially powerful when you consider a joined query like


        SELECT code, price, title, extended.desc
        FROM   products, extended
        WHERE  products.category = 'Renaissance'

Note that the extended.desc field will be accessed as [sql-param desc].

Don't forget that you must index your fields if you want fast searching
with them as a criteria.

=head2 My session files change to owner root every day!

You have the expireall C<-r> entry in the root crontab, and it should
either be in the Interchange user crontab or run as:

 44 4 * * * su -c "/INTERCHANGE_ROOT/bin/expireall -r" INTERCHANGE_USERNAME

=head1 Shipping questions

Interchange has one of the most complete and flexible shipping
calculators found in an ecommerce program. 
 You can do most anything with a global
UserTag, even to the point of looking up a cost at a remote calculator.
(See the C<[ups-query]> tag in the C<usertag> directory for
an example.)

However, all of this comes at the price of complexity. Many questions have
already been answered on the user list.

=head2 I am using "price" as the shipping criteria and it seems to be wrong

When you put I<price> in the field, Interchange will do exactly what
it says in the documentation; multiply the value of the C<products>
database field I<price> by the number of items in the cart. If you have
quantity discounds, price adjustments, or other discounts in force via
C<CommonAdjust> or another facility they will not be taken into account.

The solution is simple -- put C<[subtotal]> instead of C<price> in the 
criterion field. Interchange will interpret MML tags normally in that position,
as it will in the C<cost> field.

=head1 CHANGES

$Log: mvfaq.pod,v $
Revision 1.1  2001-04-10 21:05:14  jon
Moving retired docs here for future reference.

Revision 1.1  2001/01/16 21:22:31  jon
Most current versions of old POD documentation (from bill.minivend.com),
here for reference until we can make sure all stuff that got lost in
the SDF transition is brought over.

Revision 1.3  2000/07/20 07:20:20  heins
Made pod version of Quickstart.
Changed Minivend --> Interchange in docs.

Revision 1.2  2000/07/12 01:18:51  heins
Changed docs to reflect name Interchange. Obviously, there are still
instances of "minivend" all over the place in file names and programs.

Revision 1.1.1.1  2000/05/26 18:50:46  heins
Initial import of changed Challenger with UI instead of Minimate.

Revision 1.1.1.1  2000/05/22 14:18:57  heins
Initial Challenger deposit

Revision 1.5  2000/04/02 10:21:09  mike
* minor updates

Revision 1.4  2000/03/28 05:37:15  mike
Minor pod warning fixes.

Revision 1.3  2000/03/28 05:28:34  mike
Minor pod warning changes.

Revision 1.2  2000/03/25 08:13:53  mike
Needed NAME for manual installation.

Revision 1.1.1.1  2000/03/09 19:08:21  mike
Initial Minivend/Minimate import

Revision 1.3  1999/08/14 07:39:23  mike
Added static build stuff


