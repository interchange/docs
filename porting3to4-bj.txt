This document is from Bob Jordan. It's very similar to UPGRADE_FROM_MV3
in the main Interchange distribution, but seems to have more information
in parts and less in others. They need to be merged sometime.


REMOVAL

Many things were removed as redundant, deprecated, or just plain 
crufty:

[search-list][/search-list] must now be contained with
[search-region][/search region] tags.

mv4 uses in-page error-flagging on the checkout page.  Simplest way
to convert is probably to use the checkout.html from the simple
demo as a start, and move in any customization from the existing
site's catalog.html (headers, footers, logos, etc.)  A line-by-line
comparison of the data fields in the checkout page should be performed,
adding any custom fields as needed.  Custom error checking in 
etc/order.profiles may have to be re-worked, or can be added into 
checkout.html using the in-page order profile capability.

Remember to update receipt.html and report/report.html with any 
custom fields, as well.
* All frame features removed, frames are managed by the user in HTML.

* Tags removed:

buttonbar       Replace with Variable defined in catalog.cfg.
                buttonbar was previously used as an SSI-like
                command for catalog-wide standardized features
                like navigation bars. In the 3.x catalog.cfg the
                ButtonBars parameter defines a list of html
                snippets, like
                  'ButtonBars header,html footer.html copyright.html'
                so [buttonbar 0] substitutes 'header.html',
                   [buttonbar 1] substitutes 'footer.html', etc.

                In 4.x catalog.cfg, define variables, like
                   Variable HEADER    >pages/header
                   Variable FOOTER    >pages/footer
                   Variable COPYRIGHT >pages/copyright
                   etc.
 
                Then replace all occurences of [buttonbar 0]
                with __HEADER__, [buttonbar 1] with __FOOTER__, etc

                Note that the old header.html, footer.html, etc.
                contained html code, but were not actually html
                pages with <html><body> etc, tags.  Thus the current
                practice is to use filenames with no extension or
                perhaps '.txt' to differentiate them from pages.

random          Replace with [ad random=1] or custom code
                
                See the [ad] tag docs.  Random and rotate were used
                to place random or rotating regions on pages, such
                as banner ads.

                The Random durective in catalog.cfg defines the
                numbered html snippet files, similar to buttonbars
                above.

rotate          Replace with [ad ...]

                See random above

help            No replacement
body            Replace with templates

                Again the body tag [body 1] etc. defines
                numbered body definitions that could be applied 
                site-wide.  However, in this case minivend actually
                built up the <body ....> substitution using the
                Mv_* directives in catalog.cfg.  

finish_order    No replacement
                finish_order was a conditional tag; if the basket contained
                anything a 'checkout' graphic would be displayed.  This
                can be emulated with a test of [nitems]
last_page       No replacement - this can be emulated by setting a scratch
                variable on one page, then using it to build the return URL
item-link       No replacement, just use [page [item-code]]
loop-link       No replacement, just use [page [loop-code]]
sql-link        No replacement, just use [page [sql-code]]
accessories     Replace with normal data functions

* Compatibility routines for many popular tags like [random], [rotate], etc.
are provided in the compat/ directory.  To use, include the files in minivend.cfg:

    #include compat/*

* Directives removed:

    ActionMap
    AdminDatabase
    AdminPage
    AsciiBackend
    BackendOrder
    ButtonBars
    CheckoutFrame
    CheckoutPage
    CollectData
    DataDir
    Delimiter
    DescriptionTrim
    FieldDelimiter
    FrameFlyPage
    FrameLinkDir
    FrameOrderPage
    FrameSearchPage
    ItemLinkDir
    ItemLinkValue
    MsqlDB
    MsqlProducts
    Mv_AlinkColor
    Mv_Background
    Mv_BgColor
    Mv_LinkColor
    Mv_TextColor
    Mv_VlinkColor
    NewReport
    NewTags
    OldShipping
    OrderFrame
    PageCache
    PriceDatabase
    Random
    ReceiptPage
    RecordDelimiter
    ReportIgnore
    Rotate
    SearchFrame
    SearchOverMsg
    SecureOrderMsg
    SpecialFile
    SubArgs
    Tracking

* Minor operations removed:

    - auto-substitution of mp= on [loop search=profile],
      [search-region arg=profile]
    - [tag scan]...
    - [tag sql]...



----------------------------
UPGRADING from MiniVend 3

Form Data updates:

    * Added Scratch variable mv_data_enable to gate the update_data 
      function; prior to this it was possible to update a database
      willy-nilly. Do:

            [set update_database]
            [if type=data term="userdb::trusted::[data session username]"]
                [set mv_data_enable]1[/set]
            [else]
                [set mv_data_enable]0[/set]
            [/else]
            [/if]
            [/set]
