!init OPT_LOOK="akopia"; OPT_STYLE="manual"
# $Id: icfaq.sdf,v 1.3 2001-04-25 16:19:03 jon Exp $

!define DOC_NAME "Frequently Asked Questions"
!define DOC_TYPE ""
!define DOC_CODE "icfaq"
!define DOC_VERSION substr('$Revision: 1.3 $',11, -2)
!define DOC_STATUS "Draft"
!define DOC_PROJECT "Interchange"
!define DOC_URL "http://developer.akopia.com/doc/icfaq.html"
!build_title

H1: Frequently Asked Questions

H2: Where are the pages?

Interchange pages are not kept in normal HTML space. Look in the catalog subdirectory pages. The pages are always filtered through the Interchange daemon before being delivered.

H2: Where are the images?

Interchange is a CGI program, and if relative image paths are used, IMG tags like the following will occur:

<IMG SRC="/cgi-bin/simple/../whatever.jpg">

Interchange, by default, uses an C<ImageDir> for a prefix. In the demo, image specs that have no absolute path information are prefixed with C</simple/images/>.

In an Interchange page, this tag:

!block example
       <IMG SRC="ordernow.gif">
!endblock

will become this:

!block example
       <IMG SRC="/simple/images/ordernow.gif">
!endblock

This tag:

!block example
       <IMG SRC="items/00-0011.jpg">
!endblock

will become this:

!block example
       <IMG SRC="/simple/images/items/00-0011.jpg">
!endblock

Absolute image paths are not affected. An image, such as </other/images/whatever.gif>, will not be changed.

H2: Configuration Problems

Most Interchange configuration and setup problems are due to one of the following:

LI1: Wrong information given to makecat program.

.{{B:This is by far the most common problem.}} To install a working demo, Interchange needs to know what the C<DocumentRoot> is and how to run CGI programs. Details of this setup are server- and site-specific, which may require some research.

.Re-run the configuration again, and pay close attention to the prompts given. There are examples given which apply to most systems.

.If the web server is Apache or NCSA, Interchange will try and parse its C<httpd.conf> file to help you along, but many ISPs don't allow users to read these and it may fail.

LI1: Too-low version of Perl.

.If you have a Perl earlier than 5.005, Interchange will not work. Don't even try an earlier version.

LI1: Perl compiled with USE_THREADS.

.Run C<perl -V>. If you see -DUSE_THREADS in the compilation definition, you might run into problems with Interchange.

H2: You cannot run the Interchange software as C<root>.

If you are setting Interchange up for the entire machine, and not just as a virtual host user, it is usual to create a special C<interch> user to run the daemon and the link program. This means the directory listing for your cgi-bin should be something like:

!block example
-rwsr-xr-x   1 interchange users        6312 Dec 30 11:39 cgi-bin/simple
!endblock

and for the socket file it should be:

!block example
srw-------   1 interchange users           0 Dec 30 11:41 etc/socket
!endblock

Once you have set up the software, you can easily install catalogs as root B<as long as your C<umask> is set to 2 or 22>.

(The following assumes you have made the Interchange software owned and run by the special user C<interchange> and that each user has a Interchange catalogs directory C</home/user/catalogs>).

The best way to set permissions on a multi-user system is to make all files group readable and writable (660 or 664 mode). If you have a system setup that places each user in their own group, make C<interchange> a member of each user's group and set ownership and permissions with:

!block example
       find /home/user/catalogs -print | xargs chown user
       find /home/user/catalogs -print | xargs chgrp user
       find /home/user/catalogs -print | xargs chmod g+rw
!endblock

For best results, set the user's default umask to 2, so that they will, by default, create files that have the proper permissions. If you have all users in the same group, the above is not secure. You should put C<interchange> in a group of which no user is a member (perhaps interchange would be a good choice) and set all files owned by the group interchange and all directories to mode 2770:

This will make files default to the proper group when created (on most UNIX versions, anyway).

!block example
       find /home/user/catalogs -print | xargs chown user
       find /home/user/catalogs -print | xargs chgrp interchange
       find /home/user/catalogs -print | xargs chmod g+rw
       find /home/user/catalogs -type d -print | xargs chmod g+s
!endblock

If you are on a virtual hosting system, the procedure varies. Making the program setuid should work for most systems. If your setup uses CGI-WRAP or another setuid scheme, it should still work. However, you may have to unset the setuid bit with C<chmod u-s cgi-bin/simple> or the like. If you have a non-standard CGI setup, as some virtual host systems do, you will need to know something about UNIX and the web or engage a consultant to properly set up the paths. Usually switching to TLINK/INET mode is the easiest thing to do, though with Iserver and a few others it may take more than that.

If you used the C<makecat> program to build the catalog, it should have warned you if it was not able to make the link program setuid. To set the program (in the file C<cgi-bin/simple> in this example) to be setuid, use the command:

!block example
   chmod u+s cgi-bin/simple
!endblock

H2: Error -- the Interchange server was not running...

This indicates that the link CGI is not communicating with the Interchange server. {{B:Important note:}} The server should always be started by the same user ID which owns the suid vlink program. (This does not apply to TLINK/INET mode.)

The server must be running, first of all. If you didn't start it, you can do so by going to the Interchange home directory and typing:

!block example
   bin/start
!endblock

You can check to see if your server is running by typing:

!block example
   Linux, SunOS, BSD:    ps -ax | grep interchange
   Most other systems:   ps -elf | grep interchange
!endblock

Note: Solaris and IRIX truncate the string, and don't allow setting of the $0 parameter. You may have to grep for 'perl' instead.

If the server is not running, it may have failed due to another process occupying the TCP socket 7786. If using VLINK, try starting Interchange with C<start -u>, which will not monitor the internet-domain socket.

If VLINK is not communicating with the server, there are a number of possible reasons. First, if you are trying to run Interchange on an ISP, go to the section about ISP problems. It is probably one of those. If you are running Interchange on a single machine, it is probably one of:

!block example
   1. Permissions problems
   2. Interchange on NFS-mounted file system
!endblock

Permissions are easy. If you, for some reason, can't run VLINK as an SUID program (SUID to your user ID, not to root), you will need to make permissions more permissive. See the Interchange documentation for how to use the ReadPermission and WritePermission directives to make the session files and sockets 'group' or 'world' readable and writable. If you can make your UID, or the one you have chosen to own Interchange, the same group as your HTTP user, you can make the files group read-write. If you can't, you will have to set the dreaded 'world' permissions.

If you are running Interchange on an NFS-mounted file system, it cannot run in server mode because UNIX-domain sockets don't work on NFS. You will need to change to static mode from server mode, or better yet, put Interchange on a file system that is directly mounted.

You can use Interchange in INET mode along with the tlink.c program to allow running across NFS boundaries. If you have not changed the configured defaults, and still it will not communicate, you should try setting the LINK_HOST and LINK_PORT directives in tlink.c and recompiling.

H2: I get messages like 'Config.pm not found.' What does it mean?

This means your Perl is not properly installed, or that Interchange is not using the proper Perl binary. On UNIX, try reinstalling Interchange and using the standard Perl installation sequence:

!block example
   /complete/path/to/proper/perl Makefile.PL
   make
   make test
   make install
!endblock

Otherwise, contact your system administrator.

H2: Can't locate lib.pm in @INC. BEGIN failed--compilation aborted.

Your Perl is not properly installed. Someone has put a Perl up on your system, then either moved or removed the library directory. Contact your system administrator and request that Perl be re-installed.

H2: Can I run Interchange on the Macintosh or Windows?

Interchange will not run on a MacOS 7, 8, or 9 operating system. It will run on Mac OS X and other PowerPC Unix variants.

Interchange's *files* can be manipulated by any computer. As long as uploads/downloads of database source, pages, and configuration files are done in ASCII mode, there is no reason why they can't be edited on a Mac. And with MySQL or other ODBC databases on your UNIX-based ISP, you can even directly interface to the database you use with Interchange provided you have the scarce ODBC middleware needed for the Mac.

Interchange has run on Windows in an experimental mode, but it is unlikely to work on Windows in the near future.

H2: Shopping cart is dropped when using SSL.

This is usually due to the HostnameLookups (Stronghold/Apache parameter) not matching for the two servers, secure and non-secure. It can also be caused by the user having different web proxy addresses for HTTP and HTTPS. If it still does not work, try changing some of the appropriate configuration parameters in interchange.cfg:

!block example
   DomainTail   No
   IpHead       Yes
!endblock

If you still are having problems, try this combination in catalog.cfg, the catalog configuration file:

!block example
   SessionExpire  10 minutes
   WideOpen       Yes
!endblock

The above setting will typically make Interchange work when it is possible to work. Sometimes when you have multiple Interchange servers sharing the same secure server, you will have problems after accessing the second one. (The first one issues a session ID cookie, and that causes problems).

H2: Segmentation fault or other core dump.

If this happens when you run the Interchange test or server, it is always Perl that has a problem. Not sometimes, always. A proper Perl should never have a segmentation violation, period. And it should not dump core (unless you passed it a C<-u> option somehow).

You will need to either update Perl or report the bug to the proper personnel. Depending on your situation and technical ability, this may be your system admin, ISP, or the Perl porters.

H2: XXXXXX.pm does not match executable version.

This is a Perl which does not have the right Perl library installed. It usually results from a naive system administrator who thinks they can bypass the 'make install' for Perl and just copy the Perl binary or directories.

In any case, it has nothing to do with Interchange when you are running on UNIX. Interchange does not include any compiled libraries.

H2: Interchange doesn't work with Red Hat Linux 5.0 (glibc).

This is a defective Perl distributed by Red Hat. The problem is that they don't take GLIBC into account. It will pass make test 100 percent, but strftime dumps core on a segfault. You shouldn't run Red Hat Linux 5.0 anyway. It has drastic security problems. Update to a later version and build a new Perl.

H1: ISP Problems

Great strides have been made since Interchange's early days. The great majority of ISPs provide some CGI service, and more and more run systems that are compatible with Interchange. The new catalog configurator for Interchange makes setup much easier. A word of warning: if you chose your ISP mostly on price, you can expect problems. The low-cost providers typically have heavily-loaded machines and many domains. The more domains and the more load the unhappier you will be with Interchange. Interchange works best on a fast machine with plenty of memory.

A few Internet Service Provider (ISP) systems still have difficulty with one or the other aspect of running Interchange. A few cannot (or will not) run Interchange at all. On top of that, many times ISP personnel are too busy to help, won't help, or don't know enough to help. Some are secretive about details of the setup of their systems.

All in all, you can have a fair amount of confidence that your ISP can run Interchange. Or, you can get one who will.

H2: No shell access allowed on my ISP.

Generally it is a waste of time to try to use Interchange without shell access.

H2: We're sorry, the Interchange server is unavailable...

(The following assumes that you were able to start the Interchange server.)

This could be almost anything, but with a properly configured Interchange it is almost undoubtedly due to your cgi-bin and/or your Interchange directory being located on a different filesystem than the actua machine that is executing the program. VLINK uses UNIX-domain sockets, which don't work on NFS-mounted filesystems.

Iserver.com and other systems which use chroot HTTP servers require quite a bit of extra configuration to get going. If you have not been careful to set permissions properly when running in VLINK/UNIX mode, the link CGI will not be able to communicate with the Interchange server. Please read the documentation that covers this in detail.

You can run in INET mode with the C<tlink> link program to prevent those problems.

H2: Document contains no data or premature end of script headers (especially on BSDI or FreeBSD).

This usually means that your HTTP server ran out of resources during the execution of the link program. It couldn't create more sockets, is unable to create a process, or can't open any more files.

This usually happens in frames catalogs, when Interchange is sending more than one page simultaneously. And even more especially on FreeBSD and BSDI, which are often distributed with the kernel parameters SOMAXCONN and CHILD_MAX set to levels unsuitable for serving the web.

Go to <http://www.deja.com> and try searching for MAXUSERS. This should give you plenty of pointers on how to set these parameters properly.

H2: Interchange server only runs for a while, then dies.

Many ISPs don't allow your user ID to run a program unless it is logged in! The moment a watchdog program notices a daemon running with a non-logged-in UID, it terminates the program. Or, it terminates programs that haven't been active for XX minutes. Contact your ISP about this. They may be able to do something for you.

H2: My entire home directory is in HTML document space.

If working with an ISP where all of the files are in HTML document space, disable all access to the Interchange catalog directory with the proper HTTP access restrictions. Normally that is done by creating a .htaccess file like this:

!block example
	<Limit GET POST>
	order allow,deny
	deny from all
	</Limit>
!endblock

If unable to do this, do not run Interchange unless file permissions can be set such that files will not be served. However, security will be a problem and customers' personal information could be placed at risk.

H2: Can I run multiple catalogs on one server?

Yes. Interchange supports multiple independent catalogs. There are users who run more than 500 catalogs on a single machine. The capacity is usually a function of how busy the catalogs are and how much memory and processor speed your system has.

H2: How do I start Interchange when I reboot?

Use the standard facility on your operating system. For BSD-style systems, the file is usually called rc.local (in the /etc directory).

On SVR4 systems, it is quite a bit more complex. Look for the /etc/rc.d directory and see what other programs do. Often the file is called S99startup or something similar.

{{B:Important note:}} Interchange must not run as root, which is the user identity that the startup file executes. The technique to start up depends on the facility of your su(1) command. This should work on most operating systems:

!block example
   su interchange <<EOF
   /your/interchange/dir/bin/restart
   EOF
!endblock

The B<EOF> must be the only thing on the line (no leading or trailing whitespace). If your su(1) command has a C<-c> option (as most System 5 UNIXes do), you can just set:

!block example
   su -c /your/interchange/dir/bin/restart interchange
!endblock

Interchange supplies a C<restart> script which tries to do the above portably. It works on many operating systems.

H2: How do I set up a mall?

Interchange can share product databases, session files, and any other databases. It has many features which support mall building. You can easily build separate and mostly identical catalogs which you link to via HTML. But building a mall is as much an exercise in data and process as in software. Consider the following questions:

+Who will be clearing payment?
+What happens if everyone doesn't have the same tax rate?
+How will you clear orders to multiple vendors?
+How will you bring together multiple types of shipping?
+How will the vendors get product data (including images) to you?

If you cannot answer those questions and visualize how to build a mall, you probably should not try.

H2: Can I attach a size or color to a product?

Interchange has product modifiers, or attributes, which can be carried around with the product. The [item-accessories attribute] tag will automatically place a suitable select widget on an HTML form, and "remember" what should be selected. See the Interchange documentation for Item Attributes.

You can use the SeparateItems directive or set the mv_separate_items variable on the order form to cause ordered items to be put on separate lines in the shopping basket. (This is the default in the demo catalogs.) This makes size/color handling much easier for multiple items. They can be stacked, which means that you can add multiple instances of a size or color to an individual product within a shopping cart entry line, but this is too much trouble.

The attribute information is placed on the form with form fields, like:

!block example
 <INPUT TYPE=XXXXX NAME="[modifier-name size]" VALUE="[item-modifier size]">
!endblock

The embedded Perl capability of Interchange means that you can discover the
number of items on order of each type, and build quite detailed input forms.  The Interchange demos have some examples which should help you. Try ordering
the T-Shirt and visiting its flypage.

H2: PGP encryption -- Server Error

As always, check the error log. The most common problem is something like:

!block example
   akopia.com 3Ex5lvta:akopia.com - [01/Sep/1997:09:08:43] simple /cgi-bin/simple
   > Encryption error:
   >
!endblock

Probable causes:

LI1: Interchange user ID doesn't have keyring

.You must have a C<.pgp> or C<.gnupg> directory in the home directory of the user running Interchange. It is also possible to set an environment variable (variously PGPPATH or GNUPGPATH) to orient the program correctly.

LI1: Trust problems

.If the key you are sending has not been signed by another (trusted) user, then you will get error returns from some flavors of PGP, which causes the problem.  Sometimes the fix is to route the error output to /dev/null by changing the EncryptProgram directive in catalog.cfg:

!block example; listitem=2
EncryptProgram  /usr/bin/pgp -fat -r sales@your.com 2>/dev/null
!endblock

.For GNU Privacy Guard (GPG) you would use something like:

!block example; listitem=2
EncryptProgram /usr/local/bin/gpg -ea --always-trust -r sales@your.com
!endblock

H2: PGP encryption -- What do I do now that it is working?

This depends on what you do with orders once you receive them by email.
Some PC mail agents (notably Eudora) will decrypt the PGP message embedded within the message text. In that case, you can simply embed the C<[value mv_credit_card_info]> call right in the message and be done with it.

If your mailer will not decrypt on the fly, the best way to read the credit card number is to set up MIME encoding of the order email. To do this, find the order report you are using. In the standard demos it is C<pages/ord/report.html> or C<etc/report>.

Set up two MIME regions in that file. First, at the top of the file:

!block example
   [tag mime type TEXT/PLAIN; CHARSET=US-ASCII][/tag]
   [tag mime Order Text]

   ORDER DATE: [calc]localtime[/calc]
   ORDER NUMBER: [value mv_order_number]

   Name: [value name]
   Company: [value company]

   (Rest of order text, including item list)
   [/tag]
!endblock

Then, at the bottom of the report.html file, put the credit card info:

!block example
   [if value mv_credit_card_info]
   [tag mime type application/pgp-encrypted][/tag]
   [tag mime Credit Card Information]

   [value mv_credit_card_info]

   [/tag]
   [/if]
!endblock

Once this is done, you can read mail using your PGP client as a helper application to decode the MIME attachment. This does not require a fancy setup -- you can use the standard MIT PGP 2.6.2 if desired. If you are using UNIX, set up as the helper for the MIME type B<application/pgp-encrypted>:

!block example
   xterm -e pgp -m %s
!endblock

More automated or user-friendly setups are left as an exercise for the user.

H2: How do I get the number of items in a shopping cart?

If it is simply the total number, extended according to quantity, you can use the [nitems] tag. If you need this number for use in an embedded Perl script, you can use:

!block example
   $number = $Tag->nitems();
!endblock

If it is the number of line items you need, then you can use a Perl script:

!block example
   [perl]
       return scalar @{$Carts->{main}};
   [/perl]
!endblock

(The 'main' refers to the main shopping cart.)

If you have SeparateItems in effect, and need the number of unique items, you could use:

!block example
   [perl]
       my $cart = $Carts->{main};
       foreach my $item (@$cart) {
   @items = split /\|/, $items;
   $count = 0;
   for (@items) {
   $count++ unless $seen{$_}++;
   }
   $count;
   [/perl]
!endblock

H2: The demo doesn't do ... (pick one)

That is because it is a demo. It is not intended to be a finished catalog, just a starting point.

H2: Difficulty interacting with browser: Request method for form submission is not POST

There are many possible causes for this error. The main ones are:

*This most common case is where the user bookmarks a shopping cart after Recalc or bookmarks a checkout page. Those pages are usually the results of form submissions, and are not really a candidate for a bookmark. You should make sure you provide links to both of those pages on the interact special page (in special/interact if you have started with the demo).

*User hits BACK with a very small cache. There are quite a few users who have decided 10Kbytes is enough of a cache, and that isn't adequate. (Actually, they probably assumed the number to enter was in megabytes.)

*One possible cause is that you must define METHOD=POST in all of your forms, not METHOD=post. The lower case form is not recognized in the HTTP spec.

*If you are using SSL and don't have a later HTTP server (released after roughly September 1997), there is a bug in earlier versions Microsoft Internet Explorer's version of SSL3. Stronghold 2.1.1 works around this bug. So, if you use Stronghold, you should update.

Interchange also allows you to have forms with METHOD=GET. To use, set the session ID in your form:

!block example
   <INPUT TYPE=hidden NAME=mv_session_id VALUE="[data session id]">
!endblock

You might then try METHOD=GET on forms that have problems. This may prevent errors due to one of the causes above.

H2: How can I trace the source of a purchase and run a partners program?

Interchange has a facility that adds a parameter called I<source> to the session database for that user. You should give your partners a source code, which must contain at least one letter character (A-Za-z only). It is placed in the sourcing URL as a query string of:

!block example
   mv_pc=Source1
!endblock

If this is appended to the URL with which the user calls Interchange,
it will then be placed in the session identifier C<source>.

This URL:

!block example
   C<<>A HREF="http://yourcatalog.com/cgi-in/yourcat/sp_offer?mv_pc=Source1">
       Special offer!&lt;/A>
!endblock

will yield C<Source1> from the Interchange tag [data session source].

The Interchange 3 idiom C<?;;Source1> continues to be supported, so existing partner sites should work without change.

H2: How can I send an email copy of the receipt to a user?

There are several ways, but this is a more complex question than it may seem like it is. You will have to deal with bad email addresses, deciding which
information to send, showing delivery times, etc. You also have to be very careful with credit card information. If you have not taken the proper security measures (by enabling PGP credit card encryption or using CyberCash), you might just mail them their own unencrypted credit card number!

This is supported in Interchange via a UserTag, [email ...]. See the "simple" and "basic" demos.

H2: Configuring catalog whatever...Use of uninitialized value at Config.pm line 1614, <CONFIG> chunk 322.

This is a warning from Perl indicating that an empty value was found where one is expected. The warning is left in so that you know that something is missing. Whatever it is, it can be found at the specified "chunk," or line, of catalog.cfg. If you use the include capability, it would have to be factored in as well.

The usual reason is that a file is specified in one of the directives (usually one of Help, SearchProfile, OrderProfile, Buttonbars, or UpsZoneFile) and does not exist. See the documentation for the directive on how the file name should be specified.

H2: Why isn't the error more enlightening?

Because Perl won't tell us what exactly went wrong. See its FAQ for why.

H2: We need some more information! Problem: unspecified error

This is a fault in the order profile, and can be due to any of the following:

*Problems with encryption.

*Inadvertently setting the same variable twice on the form, causing problems due to the embedded null.

*Changing the checkout profile and not testing properly under all conditions.  The order profile must not have non-blank lines that don't contain valid check procedures (excluding comments). If you are using a Perl routine in the profile, as above, you must take care that the routine returns a valid check routine.

H2: Sorting doesn't work across multiple pages.

If you are using the [sort table:field] idiom, it cannot. It sorts data
present in the list only.

H2: I am searching for a string and it is not found. I know it is there!

Set C<mv_substring_match> to C<yes> (C<su=yes> in one-clicks). This most commonly happens when searching for non-ISO-8859 (Cyrillic, or characters like umlaut and eacute) characters in word-match mode. The problem is, that unless your locale is set up properly, Perl doesn't think a non-ISO-8859 and a space character is a boundary.

Also, if you are searching for non-alpha characters, they will also not be interpreted as word characters and the boundary problems will still exist.

H2: How do I display Euro pricing?

You can use Interchange's II8N facilty via the Locale directive. In catalog.cfg:

!block example
# to define the euro-Settings (PriceDivide is for converting from DM)
Locale eur_EUR PriceDivide         1.95583
Locale eur_EUR p_cs_precedes       0
# this is great - you can even use HTML-Tags to display an euro-image
Locale eur_EUR currency_symbol     "<IMG src="/path/to/image/euro.gif">"
Locale eur_EUR p_sep_by_space      2
Locale eur_EUR mon_decimal_point   ,

# and the DM
Locale de_DE
Locale de_DE p_cs_precedes  0
Locale de_DE p_sep_by_space 2
!endblock

Note: Be sure to use the latest exchange rates when you establish your catalog.

On your pages (this is from a search results page, the [item-.... ...] notation may be different depending on your context):

!block example
[item-price]<br><!-- german is default -->
[setlocale eur_EUR]
  [currency convert=1][item-field price][/currency]<br><!-- the euro -->
[setlocale]
!endblock

Any questions? Read the docs about "Internationalization."

H1: Performance Issues

Interchange is not a lightweight program. If you are running it on a low-end ISP, whose major selling point is low cost, you will frequently find that Interchange performance is very poor. This is due to either:

LI1: Not enough memory

.If memory is low, the program will "swap" to disk. If lots of swap is used, you can expect very bad performance. This is the most common speed problem.

.If your ISP uses IDE hard disks, you can expect REALLY bad performance. IDE disks are very slow for multi-user machines, which should have SCSI if ANY swapping is to be done.

LI1: Too many domains

.If there is a huge amount of traffic on the system, then it can run at a very high "load average." If the machine's load average is routinely above 2, you can expect problems.

LI1: Underpowered machine

.If it is an old machine, it may be too slow for Interchange. A Pentium of less than 300MHz is probably not good enough unless it is completely dedicated to Interchange. The faster the processor, the happier you will be.

H2: Interchange runs, but it's sooo sllooowww...

This is almost certainly due to a system that has inadequate memory or network bandwidth. On a moderately fast ISP server with sufficient memory, pages should start displaying in less than 2 seconds. On a fast server, pages should start loading almost instantaneously.

H2: Interchange slows down over time.

There are many possible reasons for this, but most have to do with memory or session database size.

*See the documentation on Interchange administration (icadmin) and learn how to expire your session database. If it is megabytes in size, accessing a key will significantly slow down the session.

*Second, if your machine is memory-poor, you will find that Interchange gets swapped to disk. Unless your system is very fast, this will greatly hurt performance. Interchange works best on a machine that rarely if ever swaps to disk.

*Third, this often has nothing to do with Interchange at all but has to do with your HTTP server. Any long-running daemon has the potential for a memory leak. Try stopping and starting your HTTP server and seeing what happens to performance.

H2: I am using SQL, and Interchange is slow ...

It isn't Interchange. First of all, did you index your 'SKU' or other key fields? The reason Interchange doesn't do it for you is that every SQL database seems to do that a bit differently. Even then, you can try Interchange's COLUMN_DEF parameter:

Database  products  COLUMN_DEF  code=char(16) PRIMARY KEY

This will at least index the C<code> field for MySQL. Other databases differ.

Interchange can return VERY fast SQL search results. But you need to at least give it something to work with. The proper method for fast selection is:

!block example
[query sql="select code,category,title,price from products" ]

Category: [sql-param category]<BR>
Title:    <A HREF="[area [sql-code]]"> [sql-param title] </A><BR>
Price:    <A HREF="[area order [sql-param 0]]"> [sql-param price] </A><BR>

[/sql]
!endblock

This is especially powerful when you consider a joined query like:

!block example
       SELECT code, price, title, extended.desc
       FROM   products, extended
       WHERE  products.category = 'Renaissance'
!endblock

Note that the extended.desc field will be accessed as [sql-param desc]. Don't forget that you must index your fields if you want fast searching with them as a criteria.

H1: Using Interchange with Apache and SUEXEC

Apache with SUEXEC: VLINK/UNIX socket mode will not work well unless installed as a normal user. If supporting multiple users, the TLINK/INET mode must be used.

H1: A friendly reminder

{{B:When in doubt, restart the server.}} It won't take but a few seconds, and changes in configurable options don't take effect until it is done. You may even change a page and not see the effect until the server is restarted.


H1: Using Interchange with Oracle

N:Question: should we be using the DBI ChopBlanks setting for Oracle or is Interchange trimming trailing space from CHAR fields itself?

IC daemon user should have environment variables ORACLE_HOME and possibly NLS_LANG set.


Mark Johnson (Red Hat E-Business Professional Services) wrote this trigger on TABLE_NAME to update the MOD_TIME column on insert or update. The user must have been granted the RESOURCE role to create triggers. Here it is:
 
CREATE TRIGGER tr_modtime_for_TABLE_NAME
BEFORE INSERT OR UPDATE ON TABLE_NAME
FOR EACH ROW
BEGIN
  :new.MOD_TIME := SYSDATE;
END;
/
 

H1: Using Interchange with PostgreSQL

Make sure you have DBD::Pg installed and tested.
Make sure POSTGRES_INCLUDE and POSTGRES_LIB environment variables are set.


H1: Using Interchange with MySQL

Permissions. test_ databases usually special.


H1: Using Interchange with Apache

!block example
Date: Thu, 7 Sep 2000 12:08:37 -0700
From: Bill Randle <billr@exgate.tek.com>
To: minivend-users@minivend.com
Subject: Re: [mv] no /cgi-bin/storename/
 
On Sep 6,  5:13am, Victor Nolton wrote:
} Subject: [mv] no /cgi-bin/storename/
} ******    message to minivend-users from Victor Nolton <ven@pragakhan.com> ******
}
} I've noticed some of the catalogs I've done are not indexed well with
} the search engine, though most pages have meta tags, there is a
} robot.txt file and so on and so forth.I assume it's due to the
} cgi-bin in the url (not sure).
}
} I'd like to start having stores be like
}
} http://www.yourdomain.com/index.html
} http://www.yourdomain.com/ord/basket.html
} instead of
} http://www.yourdomain.com/cgi-bin/yourstore/index.html
} http://www.yourdomain.com/cgi-bin/yourstore/ord/basket.html
}
} how do you accomplish this? I assume it can be done somehow.
 
In addition to using mod_minivend, previosuly suggested, you can do this
with Apache rewrite rules in the VirtualHost directive for yourdomain.com:
 
<VirtualHost a.b.c.d>
    ServerAdmin support@mainhost.com
    DocumentRoot /home/httpd/html/yourstore
    ServerName www.yourdomain.com
    ErrorLog logs/yourdomain-error_log
    CustomLog logs/yourdomain-access_log common
    ScriptAlias /cgi-bin/ "/home/httpd/cgi-bin/"
    RewriteEngine On
    RewriteRule    ^$      /cgi-bin/yourstore/index.html    [PT,L]
    RewriteRule    ^/$     /cgi-bin/yourstore/index.html    [PT,L]
    RewriteRule    ^/index\.html$  /cgi-bin/yourstore/index.html    [PT,L]
    RewriteRule    ^/cgi-bin/yourstore/.*   -           [PT,L]
    RewriteRule    ^/(.*)      /cgi-bin/yourstore/$1        [PT,L]
</VirtualHost>
 
I just did this for a client and it works quite well (as long as you're
using a fairly recent version of Apache as your webserver).
 
        -Bill
!endblock


H1: Perl/Interchange FAQ

!block example
Date: Wed, 14 Feb 2001 10:20:18 -0600
From: Cameron B. Prince <cameron@akopia.com>
To: support@akopia.com
Subject: Local Perl Install Steps
 
Hi all,
 
Here's the steps I took to install the local perl for the client who had an
old system perl (5.004) and couldn't upgrade.
 
This was tested on a Red Hat v5.x system as well as v7.0.
 
Cameron


1) Login as user. In this example, we'll call the user bob. Bob's home directory is /home/bob.

2) Get the perl tarball and extract it in /home/bob. (tar -xzvf perl-5.6.0.tar.gz)

3) Create a directory for the local perl. (mkdir /home/bob/local-perl)

4) Compile perl.

	A) cd perl-5.6.0

	B) sh Configure

	C) Choose all the defaults until you get to: "Directories to use for library searches?" Here you want to enter the new local perl path, as well as the defaults. So you should enter something like: /home/bob/local-perl/lib /usr/local/lib /lib /usr/lib

	D) Continue choosing defaults till you get to: "Any additional ld flags (NOT including libraries)?" This should be: -L/home/bob/local-perl/lib

	E) Continue choosing defaults till you get to: "Installation prefix to use? (~name ok)" This should be: /home/bob/local-perl

	F) Choose all defaults till you get to: "Directory /home/bob/local-perl/bin doesn't exist.  Use that name anyway?" Enter y.

	G) Continue choosing defaults till you get to: "Do you want to install perl as /usr/bin/perl?" Enter n.

	H) Continue choosing defaults till you get to: "Directory /home/bob/local-perl/bin doesn't exist.  Use that name anyway?" Enter y.

	I) Directory /home/bob/local-perl/bin doesn't exist.  Use that name anyway? Enter y.

	J) Continue taking defaults till you return to a prompt.

	K) make

	L) make test

	M) make install

	O) /home/bob/local-perl/bin/perl -v

		You should see: This is perl, v5.6.0


5) edit /home/bob/.bash_rc

		Change: PATH=$PATH:$HOME/bin
		To: PATH=/home/bob/local-perl/bin:$PATH:$HOME/bin

6) Logout and log back in.

7) which perl

		You should see: ~/local-perl/bin/perl or /home/bob/local-perl/bin/perl


8) perl -MCPAN -e 'install Bundle::Interchange'

Keep running this until you see:

MD5 is up to date.
MIME::Base64 is up to date.
URI is up to date.
Net::FTP is up to date.
MIME::Base64 is up to date.
Digest::MD5 is up to date.
HTML::Tagset is up to date.
HTML::Parser is up to date.
HTML::HeadParser is up to date.
LWP is up to date.
Term::ReadKey is up to date.
Term::ReadLine::Perl is up to date.
Business::UPS is up to date.
SQL::Statement is up to date.
Storable is up to date.
DBI is up to date.
Safe::Hole is up to date.

You may need to get the modules via ftp and install them by hand. For instance, during the test used to create this document, I had to get URI and LWP and install by hand before everything reported that it was up to date. To do this, follow these steps:

1) ftp ftp.cpan.org
2) cd /CPAN/modules/by-module/URI
3) bin
4) get URI-1.10.tar.gz
5) quit
6) tar -xzvf URI-1.10.tar.gz
7) cd URI-1.10
8) perl Makefile.pl
9) make
10) make test
11) make install

Use the same basic steps for any module not properly installed by using perl -MCPAN -e 'install Bundle::Interchange'


9) Install Interchange as normal.
!endblock
